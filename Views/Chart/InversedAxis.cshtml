@using Syncfusion.EJ2;
<script src="~/Scripts/theme-color.js"></script>
@section ControlsSection{
<div class="control-section">
    <div style="text-align:center">
@(Html.EJS().Chart("container")
    .Series(sr =>
    {
        sr.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column)
            .Name("Rate")
            .XName("Year")
            .YName("ExchangeRate")
            .Width(2).Opacity(1)
            .Marker(mr=>mr.DataLabel(dl=>dl.Visible(true).Position(Syncfusion.EJ2.Charts.LabelPosition.Top).Font(ff => ff.FontWeight("600").Color("#ffffff"))))
            .DataSource(ViewBag.ChartPoints).Add();
    })
      .PrimaryXAxis(xaxis =>
         xaxis.OpposedPosition(true)
            .IsInversed(true)
            .MajorGridLines(mg=>mg.Width(0))
            .ValueType(Syncfusion.EJ2.Charts.ValueType.Category)
             .MajorTickLines(mt=>mt.Width(0))
      )
      .PrimaryYAxis(yaxis =>
          yaxis.EdgeLabelPlacement(Syncfusion.EJ2.Charts.EdgeLabelPlacement.Shift)
            .LabelIntersectAction(Syncfusion.EJ2.Charts.LabelIntersectAction.Rotate45)
            .IsInversed(true)
            .MajorGridLines(mg=>mg.Width(0))
            .MajorTickLines(mt=>mt.Width(0))
            .LineStyle(ls=>ls.Width(0))
            .LabelStyle(ls=>ls.Color("transparent"))
      )
      .Title("Exchange Rate(INR per USD)")
      .Tooltip(tp => tp.Enable(true))
      .LegendSettings(lg => lg.Visible(false))
      .Load("load").ChartArea(area => area.Border(br => br.Width(0))).PointRender("labelRender").Render()
)       
    </div>
    <div style="float: right; margin-right: 10px; margin-top: -5px">
    </div>
</div>

 @*custom code start*@
<style>
    #control-container {
        padding: 0px !important;
    }
</style>
 @*custom code end*@
    <script>
        var labelRender = function (args) {
            var selectedTheme = themeName ? themeName : 'Fluent2';
            var materialColors = ["#00bdae", "#404041", "#357cd2", "#e56590", "#f8b883", "#70ad47", "#dd8abd", "#7f84e8", "#7bb4eb",
                "#ea7a57", "#404041", "#00bdae"];
            var fabricColors = ["#4472c4", "#ed7d31", "#ffc000", "#70ad47", "#5b9bd5",
                "#c1c1c1", "#6f6fe2", "#e269ae", "#9e480e", "#997300", "#4472c4", "#70ad47", "#ffc000", "#ed7d31"];
            var bootstrapColors = ["#a16ee5", "#f7ce69", "#55a5c2", "#7ddf1e", "#ff6ea6",
                "#7953ac", "#b99b4f", "#407c92", "#5ea716", "#b91c52"];
            var highContrastColors = ["#79ECE4", "#E98272", "#DFE6B6", "#C6E773", "#BA98FF",
                "#FA83C3", "#00C27A", "#43ACEF", "#D681EF", "#D8BC6E"];
            var fluentColors = ['#1AC9E6', '#DA4CB2', '#EDBB40', '#AF4BCF', '#FF7266', '#1BD565', '#EE993D', '#5887FF', '#EC548D',
                '#7D39C0'];
            var fluentDarkColors = ['#1AC9E6', '#DA4CB2', '#EDBB40', '#AF4BCF', '#FF7266', '#1BD565', '#EE993D', '#5887FF', '#EC548D',
                '#7D39C0'];
            var fluent2Colors = ["#6200EE", "#09AF74", "#0076E5", "#CB3587", "#E7910F", "#0364DE", "#66CD15", "#F3A93C", "#107C10",
                "#C19C00"];
            var fluent2HighContrastColors = ["#9BB449", "#2A72D5", "#43B786", "#3F579A", "#584EC6", "#E85F9C", "#6E7A89", "#EA6266",
                "#0B6A0B", "#C19C00"];
            var tailwindColors = ["#5A61F6", "#65A30D", "#334155", "#14B8A6", "#8B5CF6", "#0369A1", "#F97316", "#9333EA", "#F59E0B", "#15803D"];
            var tailwindDarkColors = ["#8B5CF6", "#22D3EE", "#F87171", "#4ADE80", "#E879F9", "#FCD34D", "#F97316", "#2DD4BF", "#F472B6", "#10B981"];
            var tailwind3Colors = ['#2F4074', '#03B4B4', '#0D72DE', '#FF5733', '#D63384', '#F39C12', '#EF291F', '#91C822', '#2F4074', '#03B4B4'];
            var tailwind3DarkColors = ['#8029F1', '#1ABC9C', '#0D72DE', '#FF5733', '#D63384', '#F39C12', '#EF291F', '#91C822', '#8029F1', '#1ABC9C'];
            if (selectedTheme && selectedTheme.indexOf('fabric') > -1) {
                args.fill = fabricColors[args.point.index % 10];
            }
            else if (selectedTheme === 'material') {
                args.fill = materialColors[args.point.index % 10];
            }
            else if (selectedTheme === 'fluent') {
                args.fill = fluentColors[args.point.index % 10];
            }
            else if (selectedTheme === 'fluent-dark') {
                args.fill = fluentDarkColors[args.point.index % 10];
            }
            else if (selectedTheme === 'fluent2') {
                args.fill = fluent2Colors[args.point.index % 10];
            } 
            else if (selectedTheme === 'tailwind') {
                args.fill = tailwindColors[args.point.index % 10];
            } 
            else if (selectedTheme === 'tailwind-dark') {
                args.fill = tailwindDarkColors[args.point.index % 10];
            }
            else if (selectedTheme === 'tailwind3') {
                args.fill = tailwind3Colors[args.point.index % 10];
            } 
            else if (selectedTheme === 'tailwind3-dark') {
                args.fill = tailwind3DarkColors[args.point.index % 10];
            }
            else if (selectedTheme === 'fluent2-highcontrast' || selectedTheme === 'fluent2-dark') {
                args.fill = fluent2HighContrastColors[args.point.index % 10];
            }
            else {
                args.fill = bootstrapColors[args.point.index % 10];
            }
        };

        var load = function (args) {
            var selectedTheme = themeName ? themeName : 'Fluent2';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast').replace(/5.3/i, '5');
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "75%";
        }
    </script>
}
 @*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Inversed Axis in ASP.NET MVC Chart control. Explore here for more details."/>
                }
 @*custom code end*@
@section ActionDescription{
    <p>
        This sample uses an inverse axis in a chart to plot an exchange rate over a period of time.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to invert the axis of the chart. Here, both X and Y axis are inverse by setting the <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Charts.ChartAxis.html#Syncfusion_EJ2_Charts_ChartAxis_IsInversed" aria-label="IsInversed">IsInversed<span class="sr-only">opens in a new tab</span></a> property in axis to <b>true</b>.
    </p>
    <p>
        <code>Tooltip</code> is enabled in this example. To see the tooltip in action, hover over a data point or tap one on touch-enabled devices.
    </p>
    <p>
        More information about the inverse axis can be found in this
        <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/chart/axis-customization#inversed-axis" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
    </p>
}
@section Title{
                    <title>ASP.NET MVC Chart Inversed Axis Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Inversed Axis in ASP.NET MVC Chart Control</h1>
                }