@using Syncfusion.EJ2;
@section ControlsSection{
    <div class="control-section" align="center">
        
            @Html.EJS().Chart("container").Series(
series => {
    series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column).Name("Total").XName("ConsumerName").YName("TotalCount")
    .Marker(mr=>mr.DataLabel(dl=>dl.Visible(true).Name("DataLabelMappingName").Position(Syncfusion.EJ2.Charts.LabelPosition.Top).Font(ff => ff.FontWeight("600").Color("#ffffff"))))
    .DataSource(ViewBag.ChartPoints).Width(2).ColumnWidth(0.5).Add();
    series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column).Name("Apple").XName("ConsumerName").YName("AppleCount")
   .Marker(mr => mr.DataLabel(dl => dl.Visible(true).Position(Syncfusion.EJ2.Charts.LabelPosition.Top).Font(ff => ff.FontWeight("600").Color("#ffffff"))))
    .DataSource(ViewBag.ChartPoints).Width(2).ColumnWidth(0.4).Add();
    series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column).Name("Orange").XName("ConsumerName").YName("OrangeCount")
    .Marker(mr => mr.DataLabel(dl => dl.Visible(true).Position(Syncfusion.EJ2.Charts.LabelPosition.Top).Font(ff => ff.FontWeight("600").Color("#ffffff"))))
    .DataSource(ViewBag.ChartPoints).Width(2).ColumnWidth(0.3).Add();
    series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column).Name("Grapes").XName("ConsumerName").YName("GrapesCount")
    .Marker(mr => mr.DataLabel(dl => dl.Visible(true).Position(Syncfusion.EJ2.Charts.LabelPosition.Top).Font(ff => ff.FontWeight("600").Color("#ffffff"))))
    .DataSource(ViewBag.ChartPoints).Width(2).ColumnWidth(0.2).Add();

}).PrimaryXAxis(px => {
    px.ValueType(Syncfusion.EJ2.Charts.ValueType.Category).MajorGridLines(mg=>mg.Width(0)).MajorTickLines(mt=>mt.Width(0)).
    Interval(1);
}).PrimaryYAxis(py => {
    py.Title("Fruits Count").
    LineStyle(ls => ls.Width(0)).
        MajorTickLines(mt=>mt.Width(0));
}).EnableSideBySidePlacement(false).Title("Fruit Consumption").ChartArea(area => area.Border(br => br.Width(0))
).Load("load").Tooltip( tt => { tt.Enable(true).Shared(true); }).LegendSettings(lg => lg.Visible(true)).Render()



        </div>
    
@*custom code start*@
    <style>
        #control-container {
            padding: 0px !important;
        }
    </style>
@*custom code end*@
    <script>
        var load = function (args) {
            var selectedTheme = themeName ? themeName : 'Fluent2';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast').replace(/5.3/i, '5');
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "75%";
            args.chart.series[0].marker.dataLabel.alignment = ej.base.Browser.isDevice ? "Top" : "Top";
            args.chart.series[0].marker.dataLabel.enableRotation = ej.base.Browser.isDevice ? "true" : "false";
            args.chart.series[0].marker.dataLabel.angle = ej.base.Browser.isDevice ? -90 : 0;
        }
    </script>
}
@*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Back To Back Column in ASP.NET MVC Chart control. Explore here for more details."/>
                }
@*custom code end*@
@section ActionDescription{
    <p>
        This sample shows four series of columns in which each column is rendered with a different width and placed behind the previous column.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure the column chart. The column chart is used to compare the frequency, count, total or average of data in different categories. The <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Charts.Chart.html#Syncfusion_EJ2_Charts_Chart_EnableSideBySidePlacement" aria-label="EnableSideBySidePlacement">EnableSideBySidePlacement<span class="sr-only">opens in a new tab</span></a> property is used to enable/disable side-by-side position.
        <code>DataLabel</code> is used to present details about individual data points.
    </p>
    <p>
        <code>Tooltip</code> is enabled in this example. To see the tooltip in action, hover over a point or tap on a point in touch-enabled devices.
    </p>
    <p>
        More information on the column series can be found in this
        <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/chart/chart-types#column-charts" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
    </p>
}
@section Title{
                    <title>ASP.NET MVC Chart Back To Back Column Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Charts</h1>
                }