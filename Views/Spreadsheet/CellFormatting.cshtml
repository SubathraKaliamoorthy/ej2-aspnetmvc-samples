@using Syncfusion.EJ2
@using Syncfusion.EJ2.Spreadsheet

@section ControlsSection{
<div class="control-section">
    @Html.EJS().Spreadsheet("spreadsheet").ShowRibbon(false).ShowFormulaBar(false).Created("createdHandler").BeforeCellRender("beforeCellRender").Sheets(sheet =>
    {
    sheet.Name("Order Details").ShowGridLines(false).Ranges(ranges =>
    {
        ranges.DataSource((IEnumerable<object>)ViewBag.orderDetails).Add();
        }).Rows(row =>{
        row.Height(36).Cells(cell =>{
            cell.Value("Order ID").Style(new SpreadsheetCellStyle() { TextAlign = TextAlign.Right }).Add();
            cell.Value("Customer Name").Style(new SpreadsheetCellStyle() { TextIndent = "2pt" }).Add();
            cell.Value("Order Date").Style(new SpreadsheetCellStyle() { TextAlign = TextAlign.Right }).Add();
            cell.Style(new SpreadsheetCellStyle() { TextIndent = "2pt" }).Add();
            cell.Index(5).Value("Postal Code").Style(new SpreadsheetCellStyle() { TextAlign = TextAlign.Right }).Add();
            cell.Index(7).Style(new SpreadsheetCellStyle() { TextAlign = TextAlign.Center }).Add();
            cell.Style(new SpreadsheetCellStyle() { TextAlign = TextAlign.Right }).Add();
            cell.Style(new SpreadsheetCellStyle() { TextIndent = "2pt" }).Add();
        }).Add();
        row.Height(42).Add();
        row.Height(42).Add();
        row.Height(42).Add();
        row.Height(42).Add();
        row.Height(42).Add();
        row.Height(42).Add();
        row.Height(42).Add();
        row.Height(42).Add();
        row.Height(42).Add();
        row.Height(42).Add();
        row.Height(42).Add();
        row.Height(42).Add();
        row.Height(42).Add();
        row.Height(42).Add();
        row.Height(42).Add();
        }).Columns(column => {
            column.Width(80).Add();
            column.Width(140).Add();
            column.Width(100).Add();
            column.Width(232).Add();
            column.Width(120).Add();
            column.Width(100).Add();
            column.Width(100).Add();
            column.Width(120).Add();
            column.Width(80).Add();
        }).Add();
     }).Render()
</div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Cell Formatting in ASP.NET MVC Spreadsheet control. Explore here for more details."/>
                }
@section ActionDescription{
<div id="action-description">
    <p>
        This sample demonstrates the <code>Spreadsheet</code> cell formatting feature by applying different styles to a range of cells.
    </p>
</div>
}
@section Description{
    <div id="description">
        <p>
            Cell formatting allows you to highlight cell data that appears in the Spreadsheet. It can be enabled
            or disabled using the <code>
                <a target="_blank" href="https://help.syncfusion.com/cr/cref_files/aspnetmvc-js2/Syncfusion.EJ2~Syncfusion.EJ2.Spreadsheet.Spreadsheet~AllowCellFormatting.html" aria-label="allowCellFormatting">allowCellFormatting<span class="sr-only">opens in a new tab</span></a>
            </code> property.
        </p>
        <p>
            In this sample, gridlines are hidden using the <code>showGridLines</code> property and the styles are
            applied using the <code>
                <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Spreadsheet.SpreadsheetCellStyle.html" aria-label="style">style<span class="sr-only">opens in a new tab</span></a>
            </code> property and <code>
                <a target="_blank" href="https://ej2.syncfusion.com/documentation/api/spreadsheet/#cellFormat" aria-label="cellFormat">cellFormat<span class="sr-only">opens in a new tab</span></a>
            </code> method.
        </p>
        <p>
            More information about <code>cell formatting</code> can be found in this
            <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/spreadsheet/getting-started-mvc" aria-label="documentation section">
                documentation
            <span class="sr-only">opens in a new tab</span></a> section.
        </p>
    </div>
    }

    <script>
        function createdHandler() {
            // Applying cell formatting dynamically using cellFormat method
            this.cellFormat({ fontWeight: 'bold', backgroundColor: '#4b5366', color: '#ffffff', fontSize: '12pt' }, 'A1:I1');
            this.cellFormat({ fontWeight: 'bold', textIndent: '2pt' }, 'B2:B16');
            this.cellFormat({ fontStyle: 'italic', textIndent: '2pt' }, 'D2:D16');
            this.cellFormat({ textIndent: '2pt' }, 'E1:E16');
            this.cellFormat({ textIndent: '2pt' }, 'G1:G16');
            this.cellFormat({ textAlign: 'center', fontWeight: 'bold' }, 'H2:H16');
            this.cellFormat({ fontFamily: 'Helvetica New', verticalAlign: 'middle' }, 'A1:I16');
            this.numberFormat('m/d/yyyy', 'C2:C16');
             // Applying currency format to a range.
            this.numberFormat('$#,##0.00', 'I2:I16');
            //Applying border to a range
            this.setBorder({ border: '1px solid #e0e0e0' }, 'A1:I16', 'Outer');
            this.setBorder({ border: '1px solid #e0e0e0' }, 'A2:I15', 'Horizontal');
        }

        function beforeCellRender(args) {
            if (this.activeSheetIndex === 0 && this.sheets[this.activeSheetIndex].name === 'Order Details') {
                if (args.cell && args.cell.value) {
                    // Applying cell formatting before rendering the particular cell
                    switch (args.cell.value) {
                        case 'Delivered':
                            this.cellFormat({ color: '#10c469', textDecoration: 'line-through' }, args.address);
                            break;
                        case 'Shipped':
                            this.cellFormat({ color: '#62c9e8' }, args.address);
                            break;
                        case 'Pending':
                            this.cellFormat({ color: '#FFC107', textDecoration: 'underline' }, args.address);
                            break;
                        case 'Cancelled':
                            this.cellFormat({ color: '#ff5b5b' }, args.address);
                            break;
                    }
                }
            }
        }
    </script>

    @*custom code start*@
    <style>
        .control-section {
            height: 550px;
        }

        #sb-content .e-spreadsheet .e-tab .e-tab-text {
            display: inherit;
        }
    </style>
    @*custom code end*@

@section Title{
                    <title>ASP.NET MVC Spreadsheet Cell Formatting Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Cell Formatting in ASP.NET MVC Spreadsheet Control</h1>
                }
