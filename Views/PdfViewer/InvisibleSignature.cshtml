@using Syncfusion.EJ2
@using Syncfusion.EJ2.Navigations
@using Syncfusion.EJ2.PdfViewer
@using Syncfusion.EJ2.Notifications;
@{
    ViewBag.Title = "InvisibleSignature";
}
@{
    string serviceUrl = VirtualPathUtility.ToAbsolute("~/api/PdfViewer/");
}
@section ControlsSection{
    <div class="control-section">
        @Html.EJS().Toolbar("topToolbar").Height("56px").Items(new List<ToolbarItem>
        {
        new ToolbarItem { Type = ItemType.Button, PrefixIcon = "e-pv-open-document-icon",TooltipText = "Open",Align=ItemAlign.Left,Click="openDocument"},
        new ToolbarItem { Type = ItemType.Button, Text="Complete Signing", Width="150px", TooltipText="Finish Signing", Id="pdfviewer_sign",Align=ItemAlign.Right,Click="signDocument", Disabled=true},
        new ToolbarItem { Type = ItemType.Button, PrefixIcon="e-btn-icon e-pv-download-document-icon e-icons", TooltipText="Download", Id="pdfviewer_download",Align=ItemAlign.Right,Click="downloadClicked"},
        }).Render()
        @Html.EJS().Message("msg_success").Severity(Severity.Success).Visible(false).Render()
        @Html.EJS().Message("msg_warning").Severity(Severity.Warning).Visible(false).Render()
        @Html.EJS().Message("msg_error").Severity(Severity.Error).Visible(false).Render()
        @Html.EJS().PdfViewer("pdfviewer").EnableToolbar(false).EnableNavigationToolbar(false).EnableThumbnail(false).EnableBookmark(false).ServiceUrl(VirtualPathUtility.ToAbsolute("~/api/PdfViewer/")).DocumentPath("InvisibleDigitalSignature.pdf").DocumentLoad("documentLoaded").AddSignature("addSignature").Render()
        <input type="file" id="fileUpload" accept=".pdf" style="display:block;visibility:hidden;width:0;height:0;">
    </div>
}

@section Meta{
    <meta name="description" content="This sample demonstrates how to digitally sign a PDF document from code behind using Syncfusion's PDF Viewer and PDF Library." />
}
@section ActionDescription{
    <div id="action-description">
        <p>This sample demonstrates how to digitally sign a PDF document from code behind using Syncfusion's PDF Viewer and PDF Library</p>
    </div>
}
@section Description{

    <div id="description">
        <p>
            This sample operates correctly when a signature field is present in the PDF document. If all signature fields
            are signed, the "Finish Signing" button becomes enabled. Clicking this button adds a digital signature
            certificate programmatically and reloads the digitally signed document into the viewer.
        </p>

        <br />

        <p>The below are the messages shown in the respective scenarios:</p>

        <br />

        <p>1. The document has been digitally signed, but it has been modified since it was signed and at least one
            signature is invalid.</p>
        <ul>
            <li>This message appears if the digitally signed document is edited after reloading.</li>
        </ul>

        <p>2. The document has been digitally signed and at least one signature has a problem.</p>

        <ul>
            <li>This message is shown if the digital signature is not registered on the machine and is not in the trusted
                list. Adding the certificate to the trusted list is necessary.</li>
        </ul>

        <p>3. The document has been digitally signed and all the signatures are valid.</p>

        <ul>
            <li>This message indicates that the document is digitally signed without any issues.</li>
        </ul>

        <p>
            More information on the PDF Viewer instantiation can be found on this
            <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/pdfviewer/getting-started" aria-label="documentation section">
                documentation section <span class="sr-only">opens in a new tab</span></a>.
        </p>

    </div>  
}

@*custom code start*@
<style>
    #pdfviewer {
        display: block;
        height: 641px;
    }

    .e-icons {
        font-family: "e-icons";
        font-style: normal;
        font-variant: normal;
        font-weight: normal;
        line-height: 1;
        text-transform: none;
    }

    .e-pv-icon::before {
        font-family: 'e-icons';
    }

    #topToolbar .e-pv-download-document-icon::before {
        padding-left: 4px;
        content: '\e914';
    }

    .e-pv-open-document-icon::before {
        content: '\e91c';
    }
    @@font-face {
        font-family: "e-icons";
        font-style: normal;
        font-weight: normal;
        src: url(data:application/x-font-ttf;charset=utf-8;base64,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ZWd1bGFyY3VzdG9tLXRvb2xiYXJbMTkwOF1jdXN0b20tdG9vbGJhclsxOTA4XVZlcnNpb24gMS4wY3VzdG9tLXRvb2xiYXJbMTkwOF1Gb250IGdlbmVyYXRlZCB1c2luZyBTeW5jZnVzaW9uIE1ldHJvIFN0dWRpb3d3dy5zeW5jZnVzaW9uLmNvbQAgAGMAdQBzAHQAbwBtAC0AdABvAG8AbABiAGEAcgBbADEAOQAwADgAXQBSAGUAZwB1AGwAYQByAGMAdQBzAHQAbwBtAC0AdABvAG8AbABiAGEAcgBbADEAOQAwADgAXQBjAHUAcwB0AG8AbQAtAHQAbwBvAGwAYgBhAHIAWwAxADkAMAA4AF0AVgBlAHIAcwBpAG8AbgAgADEALgAwAGMAdQBzAHQAbwBtAC0AdABvAG8AbABiAGEAcgBbADEAOQAwADgAXQBGAG8AbgB0ACAAZwBlAG4AZQByAGEAdABlAGQAIAB1AHMAaQBuAGcAIABTAHkAbgBjAGYAdQBzAGkAbwBuACAATQBlAHQAcgBvACAAUwB0AHUAZABpAG8AdwB3AHcALgBzAHkAbgBjAGYAdQBzAGkAbwBuAC4AYwBvAG0AAAAAAgAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAQIBAwEEAQUBBgEHAQgBCQEKAQsBDAENAQ4BDwAIVG9wLWljb24LZG93bi1hcnJvdzIKUFZfWm9vbW91dAlQVl9ab29taW4LUFZfRG93bmxvYWQLUFZfQm9va21hcmsJUFZfU2VhcmNoCFBWX1ByaW50C1BWX1ByZXZpb3VzB1BWX05leHQIUFZfQ2xvc2UMUFZfRml0VG9QYWdlB1BWX09wZW4AAA==) format('truetype');
    }
</style>
@*custom code end*@
<script>
    var toolbarObj;
    var viewer;
    var msgWarning;
    var msgError;
    var msgSuccess;
    var documentData;
    // Specifies whether the document has a digital signature or not.
    var hasDigitalSignature = false;
    var openDocument;
    var fileName;
    window.onload = function () {
        viewer = document.getElementById('pdfviewer').ej2_instances[0];
        toolbarObj = document.getElementById('topToolbar').ej2_instances[0];
        toolbarObj.items[2].disabled = true;
        msgSuccess = document.getElementById('msg_success').ej2_instances[0];
        msgWarning = document.getElementById('msg_warning').ej2_instances[0];
        msgError = document.getElementById('msg_error').ej2_instances[0];
        document.getElementById('fileUpload').addEventListener('change', readFile, false);
    }

    function openDocument() {
        document.getElementById('fileUpload').click();
    }

    function addSignature(args) {
        var field = viewer.retrieveFormFields();
        var signatureFieldCount = 0;
        var signaturesCount = 0;
        for (var i = 0; i < field.Count; i++) {
            if (field[i].Type.ToString() == ("SignatureField")) {
                signatureFieldCount++;
            }
            if (field[i].Value != "" && field[i].Value != null && field[i].Type.ToString() == ("SignatureField")) {
                signaturesCount++;
            }
        }
        if (signatureFieldCount == signaturesCount) {
            if (!hasDigitalSignature) {
                toolbarObj.items[1].disabled = false;
            }
        }
    }

    function signDocument(args) {
        viewer.serverActionSettings.download = 'AddSignature';
        var data;
        var base64data;
        viewer.saveAsBlob().then(function (value) {
            data = value;
            var reader = new FileReader();
            reader.readAsDataURL(data);
            reader.onload = function () {
                base64data = reader.result;
                documentData = base64data;
                viewer.load(base64data, null);
                viewer.fileName = fileName;
                viewer.downloadFileName = fileName;
                toolbarObj.items[1].disabled = true;
                toolbarObj.items[2].disabled = false;
            };
        });
        viewer.serverActionSettings.download = 'Download';
    }
    function documentLoaded(args) {
        fileName = args.documentName;
        var postData = {
            documentData: documentData
        };
        var options = {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(postData)
        };
        var apiUrl = '@serviceUrl' + 'ValidateSignature';
        fetch(apiUrl, options)
            .then(function (response) { return response.json(); })
            .then(function (body) {
                body = JSON.parse(body);
                if (body.successVisible || body.warningVisible || body.errorVisible)
                    toolbarObj.items[1].disabled = true;
                if (!body.downloadVisibility)
                    toolbarObj.items[2].disabled = false;
                if ((body.successVisible)) {
                    setTimeout(function () {
                        msgSuccess.content = body.message;
                        msgSuccess.visible = true;
                    }, 1000);
                    setTimeout(function () {
                        msgSuccess.visible = false;
                    }, 5000);
                }
                if ((body.warningVisible)) {
                    msgWarning.content = body.message;
                    msgWarning.visible = true;
                }
                if (body.errorVisible) {
                    msgError.content = body.message;
                    msgError.visible = true;
                }
            });
    }

    function downloadClicked(args) {
        viewer.download();
    }


    function readFile(args) {
        var upoadedFiles = args.target.files;
        if (args.target.files[0] !== null) {
            var uploadedFile = upoadedFiles[0];
            fileName = upoadedFiles[0].name;
            if (uploadedFile) {
                var reader = new FileReader();
                reader.readAsDataURL(uploadedFile);
                // tslint:disable-next-line
                reader.onload = function (e) {
                    toolbarObj.items[2].disabled = true;
                    let uploadedFileUrl = e.currentTarget.result;
                    documentData = uploadedFileUrl;
                    viewer.load(uploadedFileUrl, null);
                    viewer.fileName = fileName;
                    viewer.downloadFileName = fileName;
                };
            }
        }
    }
</script>
@*custom code end*@
@section Title{
    <title>ASP.NET MVC PDF Viewer Invisible Signature Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Invisible Signature in ASP.NET MVC PDF Viewer Control</h1>
}