@using Syncfusion.EJ2;
@section ControlsSection{
    <div class="control-section" align="center">
        @Html.EJS().Chart("container").Series(series =>
   {
       series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Polar).DrawType(Syncfusion.EJ2.Charts.ChartDrawType.StackingColumn).DataSource(ViewBag.ChartPoints).Name("6-9").XName("XValue").YName("YValue").Width(2).Add();
       series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Polar).DrawType(Syncfusion.EJ2.Charts.ChartDrawType.StackingColumn).DataSource(ViewBag.ChartPoints).Name("9-11").XName("XValue").YName("YValue1").Width(2).Add();
       series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Polar).DrawType(Syncfusion.EJ2.Charts.ChartDrawType.StackingColumn).DataSource(ViewBag.ChartPoints).Name("11-14").XName("XValue").YName("YValue2").Width(2).Add();
       series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Polar).DrawType(Syncfusion.EJ2.Charts.ChartDrawType.StackingColumn).DataSource(ViewBag.ChartPoints).Name("14-17").XName("XValue").YName("YValue3").Width(2).Add();
       series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Polar).DrawType(Syncfusion.EJ2.Charts.ChartDrawType.StackingColumn).DataSource(ViewBag.ChartPoints).Name("17-20").XName("XValue").YName("YValue4").Width(2).Add();
       series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Polar).DrawType(Syncfusion.EJ2.Charts.ChartDrawType.StackingColumn).DataSource(ViewBag.ChartPoints).Name("23 Above").XName("XValue").YName("YValue5").Width(2).Add();
   }
       ).PrimaryXAxis(py => py.Interval(1).LabelPlacement(Syncfusion.EJ2.Charts.LabelPlacement.OnTicks).ValueType(Syncfusion.EJ2.Charts.ValueType.Category)
           ).Title("Wind Rose Chart").Tooltip(tl => tl.Enable(true)).LegendSettings(lg => lg.EnableHighlight(true)).Load("load").Render()
    </div>

    @*custom code start*@
    <style>
        #control-container {
            padding: 0px !important;
        }
    </style>
    @*custom code end*@
    <script>
        var load = function (args) {
            var selectedTheme = themeName ? themeName : 'Fluent2';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast').replace(/5.3/i, '5');
            args.chart.primaryXAxis.coefficient = ej.base.Browser.isDevice ? 80 : 100;
        };
    </script>
}
 @*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the WindRose in ASP.NET MVC Chart control. Explore here for more details."/>
                }
 @*custom code end*@
@section ActionDescription{
    <p>
        This sample shows a wind rose chart designed using polar and radar charts with a stacking column series. A wind rose chart helps visualize wind patterns, i.e., wind speed and wind direction.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure the polar and radar charts with a stacking column series. Switching between polar and radar series can be done using <b>Series Type</b> in the property panel.
    </p>
    <p>
        <code>Tooltip</code> is enabled in this example. To see the tooltip in action, hover over a point or tap on a point in touch-enabled devices.
    </p>
    <p>
        More information about the polar and radar series with a stacking column type chart can be found in this
        <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/chart/polar-radar#draw-types" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
    </p>
}
@section Title{
                    <title>ASP.NET MVC Chart WindRose Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of WindRose in ASP.NET MVC Chart Control</h1>
                }