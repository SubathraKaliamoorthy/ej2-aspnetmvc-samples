@using Syncfusion.EJ2
@{
    ViewBag.Title = "DefaultFunctionalities";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    string serviceUrl = VirtualPathUtility.ToAbsolute("~/api/PdfViewer/");
}

@section ControlsSection{
    <div class="col-lg-9 control-section pdfviewer-control-section">
        <div class="flex-container">
            <label class="switchLabel" for="checked">Standalone PDF Viewer</label>
            <div class="e-message render-mode-info">
                <span class="e-msg-icon render-mode-info-icon" title="Turn OFF to render the PDF Viewer as server-backed"></span>
            </div>
            <div>
                @Html.EJS().Switch("checked").Checked(true).Change("change").CssClass("buttonSwitch").Render()
            </div>
        </div>
        @Html.EJS().PdfViewer("pdfviewer").DocumentPath("https://cdn.syncfusion.com/content/pdf/pdf-succinctly.pdf").ResourceUrl("https://cdn.syncfusion.com/ej2/23.2.6/dist/ej2-pdfviewer-lib").CustomContextMenuSelect("customContextMenuSelect").CustomContextMenuBeforeOpen("customContextMenuBeforeOpen").DocumentLoad("documentLoad").Render()
    </div>

    <div class="col-lg-3 property-section-pdfviewer">
        <div class="pdfviewer-property-container">
            <h5><b>Properties</b></h5>
        </div>
        <table>
            <tr>
                <td class="pdfviewer-contextmenu-checkbox-label">Hide Default Context Menu</td>
                <td>
                    @Html.EJS().CheckBox("enable").Change("contextmenuHelper").Checked(false).CssClass("multiline").Render()
                </td>
            </tr>
            <tr>
                <td class="pdfviewer-contextmenu-checkbox-label">Add Custom option at bottom</td>
                <td>
                    @Html.EJS().CheckBox("position").Change("contextmenuHelper").Checked(false).CssClass("multiline").Render()
                </td>
            </tr>
        </table>
    </div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Default Functionalities in ASP.NET MVC PDF Viewer control. Explore here for more details."/>
                }
@section ActionDescription{
    <div id="action-description">
        <p> Explore how to tailor context menus for PDF pages, annotations, and form fields in this sample.</p>
    </div>
}
@section Description{
	<div id="action-description">	
 <p>
     This customization empowers users to add new context menus on PDF pages, annotations, and form fields. In this sample:
 </p>
 <ul>
     <li>Selecting text on pages reveals a custom context menu, enabling users to search for the selected text on Google.</li>
     <li>Annotations and Form fields can be locked directly from the context menu.</li>
     <li>Customization is achieved using the following APIs:</li>
     <ul>
         <li>Customize the context menu by selectively displaying custom options, hiding existing menu items, controlled by boolean parameters in the <code>addCustomMenu()</code> method.</li>
         <li>Position custom menu items either above or below existing ones, adjusting boolean parameters in the <code>addCustomMenu()</code> method.</li>
         <li>Tailor the visibility of custom menu items using the <code>customContextMenuBeforeOpen</code> event.</li>
         <li>Implement specific functionalities for custom options through the <code>customContextMenuSelect</code> event.</li>
     </ul>
 </ul> 
	</div>
    <div id="description">
        <p>
        More information on the PDF Viewer instantiation can be found in this
        <a target="_blank" 
        href="https://ej2.syncfusion.com/aspnetmvc/documentation/pdfviewer/getting-started/" aria-label="documentation section">
        documentation section<span class="sr-only">opens in a new tab</span></a>.
    </p>
        
    </div>
}
@*custom code start*@
<style>

#pdfviewer {
    display: block;
    height: 641px;
}

.flex-container {
    display: flex;
    justify-content: flex-end;
}

.render-mode-info {
    background: none;
    border: none;
    padding-left: 0px;
}

.render-mode-info .render-mode-info-icon {
    height: 16px;
    width: 16px;
}

.switchLabel {
    font-family: "Segoe UI", "GeezaPro", "DejaVu Serif", sans-serif;        
    font-weight: 400;
    line-height: 20px;
    letter-spacing: 0.24px;
    text-align: right;
    font-size: 14px;
}

.render-mode-info .render-mode-info-icon::before {
    line-height: 0.5rem;
}

.buttonSwitch {
    Width: 40px;
    Height: 24px;
}

.property-section-pdfviewer {
    padding: 20px 15px;
}

.pdfviewer-contextmenu-checkbox-label {
    padding: 10px;
}

.pdfviewer-control-section {
    border-right: 1px solid #D7D7D7;
}

.pdfviewer-property-container{
    padding-bottom: 30px;
}

</style>

<script type="text/javascript">
   var menuItems = [
        {
            text: 'Search In Google',
            id: 'search_in_google',
            iconCss: 'e-icons e-de-ctnr-find'
        },
        {
            text: 'Lock Annotation',
            iconCss: 'e-icons e-lock',
            id: 'lock_annotation'
        },
        {
            text: 'Unlock Annotation',
            iconCss: 'e-icons e-unlock',
            id: 'unlock_annotation'
        },
        {
            text: 'Lock Form Field',
            iconCss: 'e-icons e-lock',
            id: 'read_only_true'
        },
        {
            text: 'Unlock Form Field',
            iconCss: 'e-icons e-unlock',
            id: 'read_only_false'
        },
    ];
    function documentLoad(arg) {
        var pdfviewer = document.getElementById('pdfviewer').ej2_instances[0];
        pdfviewer.addCustomMenu(menuItems, false, false);
    }

    function customContextMenuSelect(args) {
        switch (args.id) {
            case 'search_in_google':
                var pdfviewer = document.getElementById('pdfviewer').ej2_instances[0];
                for (var i = 0; i < pdfviewer.textSelectionModule.selectionRangeArray.length; i++) {
                    var content = pdfviewer.textSelectionModule.selectionRangeArray[i].textContent;
                    if ((pdfviewer.textSelectionModule.isTextSelection) && (/\S/.test(content))) {
                        window.open('http://google.com/search?q=' + content);
                    }
                }
                break;
            case 'lock_annotation':
                lockAnnotations(args);
                break;
            case 'unlock_annotation':
                unlockAnnotations(args);
                break;
            case 'read_only_true':
                setReadOnlyTrue(args);
                break;
            case 'read_only_false':
                setReadOnlyFalse(args);
                break;
            case 'required_true':
                setRequiredTrue(args);
                break;
            case 'required_false':
                setRequiredFalse(args);
                break;
            case 'formfield properties':
                break;
            default:
                console.log("Paste Selected");
                break;
        }
    };

    function customContextMenuBeforeOpen(args) {
        for (var i = 0; i < args.ids.length; i++) {
            var search = document.getElementById(args.ids[i]);
            var pdfviewer = document.getElementById('pdfviewer').ej2_instances[0];
            if (search) {
                search.style.display = 'none';
                if (args.ids[i] === 'search_in_google' && (pdfviewer.textSelectionModule) && pdfviewer.textSelectionModule.isTextSelection) {
                    search.style.display = 'block';
                } else if (args.ids[i] === "lock_annotation" || args.ids[i] === "unlock_annotation") {
                    var isLockOption = args.ids[i] === "lock_annotation";

                    for (var j = 0; j < pdfviewer.selectedItems.annotations.length; j++) {
                        var selectedAnnotation = pdfviewer.selectedItems.annotations[j];
                        if (selectedAnnotation && selectedAnnotation.annotationSettings) {
                            var shouldDisplay = (isLockOption && !selectedAnnotation.annotationSettings.isLock) ||
                                (!isLockOption && selectedAnnotation.annotationSettings.isLock);
                            search.style.display = shouldDisplay ? 'block' : 'none';
                        }
                    }
                } else if ((args.ids[i] === "read_only_true" || args.ids[i] === "read_only_false") && pdfviewer.selectedItems.formFields.length !== 0) {
                    var isReadOnlyOption = args.ids[i] === "read_only_true";
                    for (var j = 0; j < pdfviewer.selectedItems.formFields.length; j++) {
                        var selectedFormFields = pdfviewer.selectedItems.formFields[j];
                        if (selectedFormFields) {
                            var selectedFormField = pdfviewer.selectedItems.formFields[j].isReadonly;
                            var displayMenu = (isReadOnlyOption && !selectedFormField) || (!isReadOnlyOption && selectedFormField);
                            search.style.display = displayMenu ? 'block' : 'none';
                        }
                    }
                } else if (args.ids[i] === 'formfield properties' && pdfviewer.selectedItems.formFields.length !== 0) {
                    search.style.display = 'block';
                }
            }
        }
    };

    function lockAnnotations(args) {
        var pdfviewer = document.getElementById('pdfviewer').ej2_instances[0];
        for (var i = 0; i < pdfviewer.annotationCollection.length; i++) {
            if (pdfviewer.annotationCollection[i].uniqueKey === pdfviewer.selectedItems.annotations[0].id) {
                pdfviewer.annotationCollection[i].annotationSettings.isLock = true;
                pdfviewer.annotationCollection[i].isCommentLock = true;
                pdfviewer.annotation.editAnnotation(pdfviewer.annotationCollection[i]);
            }
            args.cancel = false;
        }
    }

    function unlockAnnotations(args) {
        var pdfviewer = document.getElementById('pdfviewer').ej2_instances[0];
        for (var i = 0; i < pdfviewer.annotationCollection.length; i++) {
            if (pdfviewer.annotationCollection[i].uniqueKey === pdfviewer.selectedItems.annotations[0].id) {
                pdfviewer.annotationCollection[i].annotationSettings.isLock = false;
                pdfviewer.annotationCollection[i].isCommentLock = false;
                pdfviewer.annotation.editAnnotation(pdfviewer.annotationCollection[i]);
            }
            args.cancel = false;
        }
    }

    function setReadOnlyTrue(args) {
        var pdfviewer = document.getElementById('pdfviewer').ej2_instances[0];
        var selectedFormFields = pdfviewer.selectedItems.formFields;
        for (var i = 0; i < selectedFormFields.length; i++) {
            var selectedFormField = selectedFormFields[i];
            if (selectedFormField) {
                pdfviewer.formDesignerModule.updateFormField(selectedFormField, {
                    isReadOnly: true,
                });
            }
            args.cancel = false;
        }
    }

    function setReadOnlyFalse(args) {
        var pdfviewer = document.getElementById('pdfviewer').ej2_instances[0];
        var selectedFormFields = pdfviewer.selectedItems.formFields;
        for (var i = 0; i < selectedFormFields.length; i++) {
            var selectedFormField = selectedFormFields[i];
            if (selectedFormField) {
                pdfviewer.formDesignerModule.updateFormField(selectedFormField, {
                    isReadOnly: false,
                });
            }
            args.cancel = false;
        }
    }

    function contextmenuHelper(args) {
        var pdfviewer = document.getElementById('pdfviewer').ej2_instances[0];
        pdfviewer.addCustomMenu(menuItems, enable.checked, position.checked);
    }

    function change(args) {
        var viewer = document.getElementById('pdfviewer').ej2_instances[0];
        if (args.checked) {
            viewer.serviceUrl = '';
        } else {
            viewer.serviceUrl = '@serviceUrl';
        }
        viewer.dataBind();
        viewer.load(viewer.documentPath, null);
    }

</script>
@*custom code end*@
@section Title{
                    <title>ASP.NET MVC PDF Viewer Default Functionalities Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Default Functionalities in ASP.NET MVC PDF Viewer Control</h1>
                }
                