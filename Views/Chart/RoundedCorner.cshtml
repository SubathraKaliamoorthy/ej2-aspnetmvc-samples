@using Syncfusion.EJ2;
@section ControlsSection{
    <div class="control-section">
        <div id="CornerRadius" style="text-align:center">
            @(Html.EJS().AccumulationChart("container").Series(series =>
            {
                series.Type(Syncfusion.EJ2.Charts.AccumulationType.Pie)
                    .XName("X")
                    .YName("Y")
                    .InnerRadius("50%")
                    .DataLabel(dl => dl.Visible(true).Name("X").Position(Syncfusion.EJ2.Charts.AccumulationLabelPosition.Outside).ConnectorStyle(cs => cs.Width(0)))
                    .Border(br => br.Width(3))
                    .BorderRadius(8)
                    .DataSource(ViewBag.ChartPoints)
                    .Add();
            }
            ).EnableSmartLabels(true).EnableBorderOnMouseMove(false).Tooltip(tt => tt.Enable(true).EnableHighlight(true).Header("<b>Budget</b>").Format("${point.x}: <b>${point.y}%</b>"))
            .LegendSettings(lg => lg.Visible(false)).Title("Company Budget Distribution").Load("load").PointRender("pointRender").Render())
        </div>
    </div>
    <script>
        var load = function (args) {
            var selectedTheme = themeName ? themeName : 'Fluent2';
            args.accumulation.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast').replace(/5.3/i, '5');
            args.accumulation.width = ej.base.Browser.isDevice ? "100%" : "75%";
            args.accumulation.annotations = [
                { x: "Operations", y: 30.0, content: `<div style=" padding: 5px 5px 5px 5px; font-size: ${ej.base.Browser.isDevice ? '10px' : '14px'}">30%</div>`, region: "Series", coordinateUnits: "Point" },
                { x: "Miscellaneous", y: 10.0, content: `<div style=" padding: 5px 5px 5px 5px; font-size: ${ej.base.Browser.isDevice ? '10px' : '14px'}">10%</div>`, region: "Series", coordinateUnits: "Point" },
                { x: "Human Resources", y: 15.0, content: `<div style=" padding: 5px 5px 5px 5px; font-size: ${ej.base.Browser.isDevice ? '10px' : '14px'}">15%</div>`, region: "Series", coordinateUnits: "Point" },
                { x: "Research and Development", y: 20.0, content: `<div style=" padding: 5px 5px 5px 5px; font-size: ${ej.base.Browser.isDevice ? '10px' : '14px'}">20%</div>`, region: "Series", coordinateUnits: "Point" },
                { x: "Marketing", y: 25.0, content: `<div style=" padding: 5px 5px 5px 5px; font-size: ${ej.base.Browser.isDevice ? '10px' : '14px'}">25%</div>`, region: "Series", coordinateUnits: "Point" }
            ];
        };

        var pointRender = function (args) {
            var selectedTheme = location.hash.split('/')[1];
            selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';
            if (selectedTheme.indexOf('dark') > -1) {
                if (selectedTheme.indexOf('material') > -1) {
                    args.border.color = '#303030';
                }
                else if (selectedTheme.indexOf('bootstrap5') > -1) {
                    args.border.color = '#212529';
                }
                else if (selectedTheme.indexOf('bootstrap') > -1) {
                    args.border.color = '#1A1A1A';
                }
                else if (selectedTheme.indexOf('fabric') > -1) {
                    args.border.color = '#201f1f';
                }
                else if (selectedTheme.indexOf('fluent') > -1) {
                    args.border.color = '#252423';
                }
                else if (selectedTheme.indexOf('bootstrap') > -1) {
                    args.border.color = '#1A1A1A';
                }
                else if (selectedTheme.indexOf('tailwind') > -1) {
                    args.border.color = '#1F2937';
                }
                else {
                    args.border.color = '#222222';
                }
            }
            else if (selectedTheme.indexOf('highcontrast') > -1) {
                args.border.color = '#000000';
            }
            else {
                args.border.color = '#FFFFFF';
            }
        };
    </script>
}
@*custom code start*@
@section Meta{
    <meta name="description" content="This example demonstrates the Rounded Corner in ASP.NET MVC Chart control. Explore here for more details." />
}
@*custom code end*@
@section ActionDescription{
    <p>
        This sample demonstrates the company's budget distribution over a year using a donut chart with rounded corners.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure a donut chart with customized corners for each slice. By specifying a value for <code>BorderRadius</code>, you can create rounded corners for each slice, giving the chart a modern and polished look.
    </p>
    <p>
        <code>Tooltips</code> are enabled in this example. To see the tooltips in action, hover over a slice or tap on it on touch-enabled devices.
    </p>
    <p>
        More information about the donut series can be found in this
        <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/accumulation-chart/pie-dough-nut#doughnut-chart" aria-label="Navigate to the documentation for Donut Chart in ASP.NET MVC Accumulation Chart control">documentation section<span class="sr-only">opens in a new tab</span></a>.
    </p>
}
@section Title{
    <title>ASP.NET MVC Chart Rounded Corner Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Charts</h1>
}