@using Syncfusion.EJ2;
<script src="~/Scripts/theme-color.js"></script>
@section ControlsSection{
    <div class="col-lg-7 control-section">
        <div class="content-wrapper">
            <div>
         @Html.EJS().Chart("container").Series(series =>
           {
               series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column).XName("Country").YName("User").Opacity(1).Width(2)
               .Marker(mr=>mr.DataLabel(dl=>dl.Name("DataLabelMappingName").Visible(true).Position(Syncfusion.EJ2.Charts.LabelPosition.Top).Font(ff => ff.FontWeight("600").Color("#ffffff"))))
               .DataSource(ViewBag.ChartPoints).Name("Users").Add();
           }).PrimaryXAxis(px => px.LabelIntersectAction(Syncfusion.EJ2.Charts.LabelIntersectAction.Hide).EdgeLabelPlacement(Syncfusion.EJ2.Charts.EdgeLabelPlacement.Shift).LabelPosition(Syncfusion.EJ2.Charts.AxisPosition.Outside)
                   .Interval(1).ValueType(Syncfusion.EJ2.Charts.ValueType.Category).MajorGridLines(mg=>mg.Width(0)).MaximumLabelWidth(34).EnableTrim(false).MajorTickLines(mt=>mt.Width(0))
        ).PrimaryYAxis(py => py.MajorGridLines(mg=>mg.Width(0)).MajorTickLines(mt=>mt.Width(0)).LineStyle(ls=>ls.Width(0)).LabelStyle(ls=>ls.Size("0px"))
        ).Title("Internet Users in Millions").ChartArea(area => area.Border(br => br.Width(0))).Tooltip(tt => tt.Enable(true).Header("").Format("<b>${point.x}</b> <br> Internet Users : <b>${point.y}M</b>")).LegendSettings(lg => lg.Visible(false)).Load("load").PointRender("labelRender").Render()

        </div>
    </div>
        </div>
    <div class="col-lg-5 property-section">
        <table id="property" title="Properties" style="width: 100%">
            <tbody>
                <tr style="height: 50px">
                    <td style="width: 40%">
                        <div>Intersect Action:</div>
                    </td>
                    <td style="width: 60%;">
                        <div>
                            @Html.EJS().DropDownList("selmode").Index(0).DataSource(ViewBag.data).Value("Hide").Change("valueChange").Width("200").Render()
                        </div>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td style="width: 60%">
                        <div>Edge Label Placement:</div>
                    </td>
                    <td style="width: 40%;">
                        <div>
                            @Html.EJS().DropDownList("edgemode").Index(0).DataSource(ViewBag.data1).Value("None").Change("edgeModeChange").Render()
                        </div>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td style="width: 60%">
                        <div>Label Position:</div>
                    </td>
                    <td style="width: 40%;">
                        <div>
                            @Html.EJS().DropDownList("position").Index(0).DataSource(ViewBag.data2).Value("Outside").Change("positionChange").Render()
                        </div>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td style="width: 50%">
                        <div>
                            Enable Trim:
                        </div>
                    </td>
                    <td style="width: 50%;">
                        <div>
                            <input type="checkbox" id="Trim" unchecked="">
                        </div>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td style="width: 60%">
                        <div>Maximum Label Width:</div>
                    </td>
                    <td style="width: 40%;">
                        <div style="margin-top: 0px;">
                            @Html.EJS().NumericTextBox("labelWidth").Change("widthChange").Value(34).Min(1).Max(120).Width("200").Step(1).Render()

                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
         @*custom code start*@
<style>
    #control-container {
        padding: 0px !important;
    }
    #Trim:hover {
        cursor: pointer !important;
    }
</style>
         @*custom code end*@
    <script>
        var labelRender = function (args) {
            var selectedTheme = themeName ? themeName : 'Fluent2';
            var materialColors = ["#00bdae", "#404041", "#357cd2", "#e56590", "#f8b883", "#70ad47", "#dd8abd", "#7f84e8", "#7bb4eb",
                "#ea7a57", "#404041", "#00bdae"];
            var fabricColors = ["#4472c4", "#ed7d31", "#ffc000", "#70ad47", "#5b9bd5",
                "#c1c1c1", "#6f6fe2", "#e269ae", "#9e480e", "#997300", "#4472c4", "#70ad47", "#ffc000", "#ed7d31"];
            var bootstrapColors = ["#a16ee5", "#f7ce69", "#55a5c2", "#7ddf1e", "#ff6ea6",
                "#7953ac", "#b99b4f", "#407c92", "#5ea716", "#b91c52"];
            var highContrastColors = ["#79ECE4", "#E98272", "#DFE6B6", "#C6E773", "#BA98FF",
                "#FA83C3", "#00C27A", "#43ACEF", "#D681EF", "#D8BC6E"];
            var fluentColors = ['#1AC9E6', '#DA4CB2', '#EDBB40', '#AF4BCF', '#FF7266', '#1BD565', '#EE993D', '#5887FF', '#EC548D',
                '#7D39C0'];
            var fluentDarkColors = ['#1AC9E6', '#DA4CB2', '#EDBB40', '#AF4BCF', '#FF7266', '#1BD565', '#EE993D', '#5887FF', '#EC548D',
                '#7D39C0'];
            var fluent2Colors = ["#6200EE", "#09AF74", "#0076E5", "#CB3587", "#E7910F", "#0364DE", "#66CD15", "#F3A93C", "#107C10",
                "#C19C00"];
            var fluent2HighContrastColors = ["#9BB449", "#2A72D5", "#43B786", "#3F579A", "#584EC6", "#E85F9C", "#6E7A89", "#EA6266",
                "#0B6A0B", "#C19C00"];
            var tailwindColors = ["#5A61F6", "#65A30D", "#334155", "#14B8A6", "#8B5CF6", "#0369A1", "#F97316", "#9333EA", "#F59E0B", "#15803D"];
            var tailwindDarkColors = ["#8B5CF6", "#22D3EE", "#F87171", "#4ADE80", "#E879F9", "#FCD34D", "#F97316", "#2DD4BF", "#F472B6", "#10B981"];
            var tailwind3Colors = ['#2F4074', '#03B4B4', '#0D72DE', '#FF5733', '#D63384', '#F39C12', '#EF291F', '#91C822', '#2F4074', '#03B4B4'];
            var tailwind3DarkColors = ['#8029F1', '#1ABC9C', '#0D72DE', '#FF5733', '#D63384', '#F39C12', '#EF291F', '#91C822', '#8029F1', '#1ABC9C'];
            if (selectedTheme && selectedTheme.indexOf('fabric') > -1) {
                args.fill = fabricColors[args.point.index % 10];
            }
            else if (selectedTheme === 'material') {
                args.fill = materialColors[args.point.index % 10];
            }
            else if (selectedTheme === 'fluent') {
                args.fill = fluentColors[args.point.index % 10];
            }
            else if (selectedTheme === 'fluent-dark') {
                args.fill = fluentDarkColors[args.point.index % 10];
            }
            else if (selectedTheme === 'fluent2') {
                args.fill = fluent2Colors[args.point.index % 10];
            }
            else if (selectedTheme === 'fluent2-highcontrast' || selectedTheme === 'fluent2-dark') {
                args.fill = fluent2HighContrastColors[args.point.index % 10];
            } 
            else if (selectedTheme === 'tailwind') {
                args.fill = tailwindColors[args.point.index % 10];
            } 
            else if (selectedTheme === 'tailwind-dark') {
                args.fill = tailwindDarkColors[args.point.index % 10];
            }
            else if (selectedTheme === 'tailwind3') {
                args.fill = tailwind3Colors[args.point.index % 10];
            } 
            else if (selectedTheme === 'tailwind3-dark') {
                args.fill = tailwind3DarkColors[args.point.index % 10];
            }
            else {
                args.fill = bootstrapColors[args.point.index % 10];
            }
        };
                
        var load = function (args) {
            var selectedTheme = themeName ? themeName : 'Fluent2';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast').replace(/5.3/i, '5');
            args.chart.series[0].marker.dataLabel.enableRotation = ej.base.Browser.isDevice?'true':'false';
            args.chart.series[0].marker.dataLabel.angle = ej.base.Browser.isDevice?'-90':'0';
        };
                 
        var valueChange = function () {
            var chart = document.getElementById('container').ej2_instances[0];
            var selmode = document.getElementById('selmode').ej2_instances[0];
            chart.primaryXAxis.labelIntersectAction = selmode.value;
			chart.series[0].animation.enable = false;
            chart.refresh();
        }
        var edgeModeChange = function () {
            var chart = document.getElementById('container').ej2_instances[0];
            var edgemode = document.getElementById('edgemode').ej2_instances[0];
            chart.primaryXAxis.edgeLabelPlacement = edgemode.value;
			chart.series[0].animation.enable = false;
            chart.dataBind();
        }
        var positionChange = function () {
            var chart = document.getElementById('container').ej2_instances[0];
            var position = document.getElementById('position').ej2_instances[0];
            chart.primaryXAxis.labelPosition = position.value;
			chart.series[0].animation.enable = false;
            chart.refresh();
        }
        document.getElementById('Trim').onchange = function () {
            var chart = document.getElementById('container').ej2_instances[0];
            var element = (document.getElementById('Trim'));
            chart.primaryXAxis.enableTrim = element.checked;
            chart.refresh();
        };
        var widthChange= function () {
            var chart = document.getElementById("container").ej2_instances[0];
            var width = document.getElementById("labelWidth").ej2_instances[0];
            chart.series[0].animation.enable = false;
            chart.primaryXAxis.maximumLabelWidth = width.value;
			chart.series[0].animation.enable = false;
            chart.refresh();
        }
    </script>
}
         @*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Smart Axis Labels in ASP.NET MVC Chart control. Explore here for more details."/>
                }
         @*custom code end*@
@section ActionDescription{
    <p>
        This example shows the smart label placement for the chart axis labels.
    </p>
}
@section Description{
    <p>
        In this example, you can see how the axis labels are smartly arranged when they overlap with each other using the <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Charts.ChartAxis.html#Syncfusion_EJ2_Charts_ChartAxis_LabelIntersectAction" aria-label="LabelIntersectAction">LabelIntersectAction<span class="sr-only">opens in a new tab</span></a> property in the axis.
    </p>
    <p>
        The following are the <code>LabelIntersectAction</code> property values and their behaviors:
    </p>
    <ul>
        <li><b>Hide</b> - Hide the label when it intersects.</li>
        <li><b>Trim</b> - Trim the label when it intersects.</li>
        <li><b>Wrap</b> - Wrap the label when it intersects.</li>
        <li><b>MultipleRows</b> - Arrange the label in multiple row when it intersect.</li>
        <li><b>Rotate45</b> - Rotate the label to 45 degree when it intersects.</li>
        <li><b>Rotate90</b> - Rotate the label to 90 degree when it intersects.</li>
        <li><b>None</b> - Shows all the labels.</li>
    </ul>
    <p>
        Chart handles edge labels placement using the <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Charts.ChartAxis.html#Syncfusion_EJ2_Charts_ChartAxis_EdgeLabelPlacement" aria-label="EdgeLabelPlacement">EdgeLabelPlacement<span class="sr-only">opens in a new tab</span></a> property. Its values and their behaviors are:
    </p>
    <ul>
        <li><code>None</code> - No action is performed.</li>
        <li><code>Hide</code> - Edge label is hidden.</li>
        <li><code>Shift</code> - Shifts the edge labels.</li>
    </ul>
    <p>
        More information on the smart axis labels can be found in this
        <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/chart/axis-labels#smart-axis-labels" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
    </p>
}
@section Title{
                    <title>ASP.NET MVC Chart Smart Axis Labels Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Smart Axis Labels in ASP.NET MVC Chart Control</h1>
                }