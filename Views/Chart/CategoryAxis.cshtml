@using Syncfusion.EJ2;
@section ControlsSection{
<script src="~/Scripts/theme-color.js"></script>
<div class="control-section">
    <div style="text-align:center">


 @Html.EJS().Chart("container").Series(series =>
{

    series.TooltipMappingName("TooltipMappingName").Type(Syncfusion.EJ2.Charts.ChartSeriesType.Bar)
    .Marker(mr => mr.DataLabel(dl => dl.Visible(true).Position(Syncfusion.EJ2.Charts.LabelPosition.Top).Font(ff => ff.FontWeight("600").Color("#ffffff"))))
    .XName("Country").YName("Users").DataSource(ViewBag.ChartPoints).Name("Users").Width(2).Add();

}).PrimaryYAxis(px => px.Minimum(0).Maximum(800).LabelStyle(ls => ls.Color("transparent")).LineStyle(ls => ls.Width(0)).MajorTickLines(mt => mt.Width(0)).MajorGridLines(mg => mg.Width(0)).EdgeLabelPlacement(Syncfusion.EJ2.Charts.EdgeLabelPlacement.Shift).LabelFormat("{value}M")
       ).PrimaryXAxis(px => px.EnableTrim(false).ValueType(Syncfusion.EJ2.Charts.ValueType.Category).MajorGridLines(mg => mg.Width(0)).MajorTickLines(mt => mt.Width(0))
       ).ChartArea(area => area.Border(br => br.Width(0))).LegendSettings(lg => lg.Visible(false)).Title("Internet Users â€“ 2016").PointRender("labelRender").Load("load").Render()
    </div>
</div>  

@*custom code start*@
<style>
    #control-container {
        padding: 0px !important;
    }
</style>
@*custom code end*@
    <script>        
        var labelRender = function (args) {
            var selectedTheme = themeName ? themeName : 'Fluent2';
            var materialColors = ["#00bdae", "#404041", "#357cd2", "#e56590", "#f8b883", "#70ad47", "#dd8abd", "#7f84e8", "#7bb4eb",
                "#ea7a57", "#404041", "#00bdae"];
            var fabricColors = ["#4472c4", "#ed7d31", "#ffc000", "#70ad47", "#5b9bd5",
                "#c1c1c1", "#6f6fe2", "#e269ae", "#9e480e", "#997300", "#4472c4", "#70ad47", "#ffc000", "#ed7d31"];
            var bootstrapColors = ["#a16ee5", "#f7ce69", "#55a5c2", "#7ddf1e", "#ff6ea6",
                "#7953ac", "#b99b4f", "#407c92", "#5ea716", "#b91c52"];
            var highContrastColors = ["#79ECE4", "#E98272", "#DFE6B6", "#C6E773", "#BA98FF",
                "#FA83C3", "#00C27A", "#43ACEF", "#D681EF", "#D8BC6E"];
            var fluentColors = ['#1AC9E6', '#DA4CB2', '#EDBB40', '#AF4BCF', '#FF7266', '#1BD565', '#EE993D', '#5887FF', '#EC548D',
                '#7D39C0'];
            var fluentDarkColors = ['#1AC9E6', '#DA4CB2', '#EDBB40', '#AF4BCF', '#FF7266', '#1BD565', '#EE993D', '#5887FF', '#EC548D',
                '#7D39C0'];
            var fluent2Colors = ["#6200EE", "#09AF74", "#0076E5", "#CB3587", "#E7910F", "#0364DE", "#66CD15", "#F3A93C", "#107C10",
                "#C19C00"];
            var fluent2HighContrastColors = ["#9BB449", "#2A72D5", "#43B786", "#3F579A", "#584EC6", "#E85F9C", "#6E7A89", "#EA6266",
                "#0B6A0B", "#C19C00"];
            if (selectedTheme && selectedTheme.indexOf('fabric') > -1) {
                args.fill = fabricColors[args.point.index % 10];
            }
            else if (selectedTheme === 'material') {
                args.fill = materialColors[args.point.index % 10];
            }
            else if (selectedTheme === 'fluent') {
                args.fill = fluentColors[args.point.index % 10];
            }
            else if (selectedTheme === 'fluent-dark') {
                args.fill = fluentDarkColors[args.point.index % 10];
            }
            else if (selectedTheme === 'fluent2') {
                args.fill = fluent2Colors[args.point.index % 10];
            }
            else if (selectedTheme === 'fluent2-highcontrast' || selectedTheme === 'fluent2-dark') {
                args.fill = fluent2HighContrastColors[args.point.index % 10];
            }
            else {
                args.fill = bootstrapColors[args.point.index % 10];
            }
        };

        var load = function (args) {
            var selectedTheme = themeName ? themeName : 'Fluent2';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast').replace(/5.3/i, '5');
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "75%";
            args.chart.series[0].marker.dataLabel.font.size = ej.base.Browser.isDevice ? '9px' : '11px';
        }
    </script>
}
    @*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Category Axis in ASP.NET MVC Chart control. Explore here for more details."/>
                }
@*custom code end*@
@section ActionDescription{
    <p>
        This sample shows a category axis in a chart with details about internet users across different countries.
    </p>
}
@section Description{
    <p>
        You can use the category axis to represent string values instead of numbers in the chart. To use the category axis, set <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Charts.ChartAxis.html#Syncfusion_EJ2_Charts_ChartAxis_ValueType" aria-label="ValueType">ValueType<span class="sr-only">opens in a new tab</span></a> in axis to <b>Category</b>.
    </p>
    <p>
        More information about the category axis can be found in this
        <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/chart/category-axis" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
    </p>
}
@section Title{
                    <title>ASP.NET MVC Chart Category Axis Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Category Axis in ASP.NET MVC Chart Control</h1>
                }