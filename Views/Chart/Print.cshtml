@using Syncfusion.EJ2;
@section ControlsSection{
    <div>
        <div class="col-lg-9 control-section">
@(Html.EJS().Chart("print-container")
    .Series(sr =>
    {
        sr.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column)
            .XName("Manager")
            .YName("SalesInfo")
            .Marker(mr => mr.DataLabel(dl => dl.Visible(true).Name("DataLabelMappingName").Position(Syncfusion.EJ2.Charts.LabelPosition.Top).Font(ff => ff.FontWeight("600").Color("#ffffff"))))
            .DataSource(ViewBag.ChartPoints).Add();
    })
      .PrimaryXAxis(xaxis =>
         xaxis.ValueType(Syncfusion.EJ2.Charts.ValueType.Category)
              .Interval(1)
              .MajorGridLines(mg=>mg.Width(0))
              .MajorTickLines(mt => mt.Width(0))
      )
      .PrimaryYAxis(yaxis =>
          yaxis.LabelFormat("${value}k")
                .Minimum(0)
                .Maximum(20)
                .Interval(4)
                .MajorGridLines(mg=>mg.Width(2))
                .MajorTickLines(mt => mt.Width(0))
                .LineStyle(ls => ls.Width(0))
      ).LegendSettings(legend => legend.Visible(false))
      .Title("Sales Comparision").ChartArea(area => area.Border(br => br.Width(0))).Load("load").ChartMouseClick("chartMouseClick").PointRender("labelRender").Render()
)
               </div>
        <div class="col-lg-3 property-section">
            <table id="property" title="Properties" style="width: 100%">
                <tr id="button-control" style="height: 50px">
                    <td align='center'>
                        <div>
                            <p><b>Print the chart</b></p><br>
                           @Html.EJS().Button("togglebtn").IsPrimary(true).Content("Print").CssClass("e-flat").IconCss("e-icons e-print-icon").Render()
                        </div>
                    </td>
                </tr>
            </table>
        </div>
        </div>

        <style>
         @*custom code start*@
            #control-container {
                padding: 0px !important;
            }
         @*custom code end*@
            #button-control {
                width: 100%;
                text-align: center;
            }
            .e-print-icon::before {
                content: '\e34b';
            }

            .e-view.fabric .e-print-icon::before, .e-view.fabric-dark .e-print-icon::before {
                content: '\e7df';
            }

            .e-view.bootstrap .e-print-icon::before {
                content: '\ebd2';
            }

            .e-view.bootstrap4 .e-print-icon::before {
                content: '\e743';
            }

            .e-view.tailwind .e-print-icon::before, .e-view.tailwind3 .e-print-icon::before, .e-view.tailwind-dark .e-print-icon::before, .e-view.tailwind3-dark .e-print-icon::before {
                content: '\e76c';
            }

            .e-view.highcontrast .e-print-icon::before {
                content: '\ebf9';
            }

            .e-view.bootstrap5\.3 .e-print-icon::before, .e-view.bootstrap5\.3-dark .e-print-icon::before {
                content: '\e75d';
            }

            .e-view.fluent .e-print-icon::before, .e-view.fluent-dark .e-print-icon::before {
                content: '\e75d';
            }

            .e-view.material3 .e-print-icon::before, .e-view.material3-dark .e-print-icon::before {
                content: '\e75d';
            }

            .e-view.fluent2 .e-print-icon::before, .e-view.fluent2-dark .e-print-icon::before, .e-view.fluent2-highcontrast .e-print-icon::before {
                content: '\e75d';
            }
        </style>
        <script src="~/Scripts/theme-color.js"></script>
        <script>
            var load = function (args) {
                var selectedTheme = themeName ? themeName : 'Fluent2';
                args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast').replace(/5.3/i, '5');
            };
            var chartMouseClick = function (args) {
                var chart = document.getElementById('print-container').ej2_instances[0];
                if (args.target.indexOf('print') > -1) {
                    chart.print();
                }
            };
            var labelRender = function (args) {
                var selectedTheme = location.hash.split('/')[1];
                selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';
                var materialColors = ["#00bdae", "#404041", "#357cd2", "#e56590", "#f8b883", "#70ad47", "#dd8abd", "#7f84e8", "#7bb4eb",
                    "#ea7a57", "#404041", "#00bdae"];
                var fabricColors = ["#4472c4", "#ed7d31", "#ffc000", "#70ad47", "#5b9bd5",
                    "#c1c1c1", "#6f6fe2", "#e269ae", "#9e480e", "#997300", "#4472c4", "#70ad47", "#ffc000", "#ed7d31"];
                var bootstrapColors = ["#a16ee5", "#f7ce69", "#55a5c2", "#7ddf1e", "#ff6ea6",
                    "#7953ac", "#b99b4f", "#407c92", "#5ea716", "#b91c52"];
                var highContrastColors = ["#79ECE4", "#E98272", "#DFE6B6", "#C6E773", "#BA98FF",
                    "#FA83C3", "#00C27A", "#43ACEF", "#D681EF", "#D8BC6E"];
                var fluentColors = ['#1AC9E6', '#DA4CB2', '#EDBB40', '#AF4BCF', '#FF7266', '#1BD565', '#EE993D', '#5887FF', '#EC548D',
                    '#7D39C0'];
                var fluentDarkColors = ['#1AC9E6', '#DA4CB2', '#EDBB40', '#AF4BCF', '#FF7266', '#1BD565', '#EE993D', '#5887FF', '#EC548D',
                    '#7D39C0'];
                var fluent2Colors = ["#6200EE", "#09AF74", "#0076E5", "#CB3587", "#E7910F", "#0364DE", "#66CD15", "#F3A93C", "#107C10",
                    "#C19C00"];
                var fluent2HighContrastColors = ["#9BB449", "#2A72D5", "#43B786", "#3F579A", "#584EC6", "#E85F9C", "#6E7A89", "#EA6266",
                    "#0B6A0B", "#C19C00"];
                var bootstrap5Colors = ["#FD7E14", "#6610F2", "#6F42C1", "#D63384", "#DC3545", "#FFC107", "#198754", "#0DCAF0",
                    "#FD7E14", "#6610F2"];
                var tailwindColors = ["#5A61F6", "#65A30D", "#334155", "#14B8A6", "#8B5CF6", "#0369A1", "#F97316", "#9333EA", "#F59E0B", "#15803D"];
                var tailwindDarkColors = ["#8B5CF6", "#22D3EE", "#F87171", "#4ADE80", "#E879F9", "#FCD34D", "#F97316", "#2DD4BF", "#F472B6", "#10B981"];
                var tailwind3Colors = ['#2F4074', '#03B4B4', '#0D72DE', '#FF5733', '#D63384', '#F39C12', '#EF291F', '#91C822', '#2F4074', '#03B4B4'];
                var tailwind3DarkColors = ['#8029F1', '#1ABC9C', '#0D72DE', '#FF5733', '#D63384', '#F39C12', '#EF291F', '#91C822', '#8029F1', '#1ABC9C'];

                if (selectedTheme && selectedTheme.indexOf('fabric') > -1) {
                    args.fill = fabricColors[args.point.index % 10];
                }
                else if (selectedTheme === 'material') {
                    args.fill = materialColors[args.point.index % 10];
                }
                else if (selectedTheme === 'fluent') {
                    args.fill = fluentColors[args.point.index % 10];
                }
                else if (selectedTheme === 'fluent-dark') {
                    args.fill = fluentDarkColors[args.point.index % 10];
                }
                else if (selectedTheme === 'fluent2') {
                    args.fill = fluent2Colors[args.point.index % 10];
                }
                else if (selectedTheme === 'fluent2-highcontrast' || selectedTheme === 'fluent2-dark') {
                    args.fill = fluent2HighContrastColors[args.point.index % 10];
                }
                else if (selectedTheme === 'bootstrap5' || selectedTheme === 'bootstrap5-dark') {
                    args.fill = bootstrap5Colors[args.point.index % 10];
                } 
                else if (selectedTheme === 'tailwind') {
                    args.fill = tailwindColors[args.point.index % 10];
                } 
                else if (selectedTheme === 'tailwind-dark') {
                    args.fill = tailwindDarkColors[args.point.index % 10];
                }
                else if (selectedTheme === 'tailwind3') {
                    args.fill = tailwind3Colors[args.point.index % 10];
                } 
                else if (selectedTheme === 'tailwind3-dark') {
                    args.fill = tailwind3DarkColors[args.point.index % 10];
                }
                else {
                    args.fill = bootstrapColors[args.point.index % 10];
                }
            };
            document.getElementById('togglebtn').onclick = function () {
                var chart = document.getElementById('print-container').ej2_instances[0];
                chart.print();
            };
        </script>
}
 @*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Print in ASP.NET MVC Chart control. Explore here for more details."/>
                }
 @*custom code end*@
@section ActionDescription{
    <p>
        This sample demonstrates the print option in the charts.
    </p>
}
@section Description{
    <p>
        By clicking the <b>Print</b> button, you can print a chart directly from the browser using the print method.
    </p>
    <p>
        More information about the print can be found in this
        <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/chart/chart-print?cs-save-lang=1&cs-lang=razor#print" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
    </p>
}
@section Title{
                    <title>ASP.NET MVC Chart Print Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Print in ASP.NET MVC Chart Control</h1>
                }