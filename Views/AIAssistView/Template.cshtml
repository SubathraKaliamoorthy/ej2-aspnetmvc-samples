@using Syncfusion.EJ2.InteractiveChat
@using Syncfusion.EJ2.Navigations
@using Syncfusion.EJ2.SplitButtons
@using Syncfusion.EJ2
@using Newtonsoft.Json

@{
    var suggestions = new string[] { "How do I set daily goals in my work day?", "Steps to publish a e-book with marketing strategy" };

    var promptsData = new[]
    {
        new { prompt = "Generate ideas for a new web products that might be popular in 2025?", response = "<p>Here are some web product ideas for 2025:</p> <ul><li><strong>AI-Powered Health Assistant:</strong> A platform offering personalized health advice and virtual consultations.</li> <li><strong>VR Shopping Mall:</strong> An immersive experience for exploring and purchasing items virtually.</li> <li><strong>Sustainable Living Hub:</strong> A resource for adopting eco-friendly lifestyles with community support.</li> <li><strong>Remote Work Suite:</strong> A tool for remote teams with project management, collaboration, and productivity features.</li></ul> <p>Which one stands out to you?</p>", suggestionData = new List<string> { "I like the AI health assistant idea!", "How can we ensure privacy with this Assistant?" } },
        new { prompt = "How do I set daily goals in my work day?", response = "<p>To stay focused and productive, try these steps for setting daily goals:</p> <ol><li><strong>Identify Priorities:</strong> List the most important tasks based on deadlines or significance.</li> <li><strong>Break Down Tasks:</strong> Split larger tasks into smaller, manageable steps.</li> <li><strong>Set SMART Goals:</strong> Make sure goals are Specific, Measurable, Achievable, Relevant, and Time-bound.</li> <li><strong>Time Blocking:</strong> Allocate specific times for each task to stay organized and on track.</li></ol> <p>Would you like more tips on any of these steps?</p>", suggestionData = new List<string> { "How do I prioritize tasks effectively?", "What tools or apps can help me prioritize tasks?" } },
        new { prompt = "Steps to publish a e-book with marketing strategy", response = "<p>To publish an e-book, follow the steps below:</p> <ol><li><strong>Write and format your e-book:</strong> Ensure your content is well-organized, edited, and formatted for digital reading.</li> <li><strong>Choose a publishing platform:</strong> Platforms like Amazon Kindle Direct Publishing (KDP) or Smashwords can help you publish and distribute your e-book.</li> <li><strong>Develop a marketing strategy:</strong> Utilize social media, email newsletters, and book promotion sites to create buzz and reach your target audience.</li> <li><strong>Launch and promote:</strong> Schedule a launch date, gather reviews, and continue promoting through various channels to maintain momentum and drive sales.</li></ol> <p>Do you have a specific topic in mind for your e-book?</p>", suggestionData = new List<string>  { "How do I create an eye-catching e-book cover?", "What are common mistakes to avoid in e-book covers?" } },
        new { prompt = "I like the AI health assistant idea!", response = "<p>Great choice! An AI-powered personal health assistant could revolutionize how we manage our health. It could provide personalized health advice, track fitness goals, and even offer virtual consultations with healthcare professionals.</p> <p>Would you like to explore more features for this idea or discuss how it could be developed?</p>", suggestionData = new List<string> { } },
        new { prompt = "How can we ensure privacy with this Assistant?", response = "<p>Ensuring user privacy with an AI-powered health assistant involves several key strategies:</p> <ol><li><strong>Data Encryption:</strong> Protect user data with strong encryption to prevent unauthorized access.</li> <li><strong>User Consent:</strong> Clearly inform users about data collection and obtain their explicit consent.</li> <li><strong>Anonymization:</strong> Use techniques to anonymize personal data, reducing identification risks.</li> <li><strong>Regular Audits:</strong> Perform privacy audits and comply with regulations like GDPR or HIPAA.</li></ol> <p>Would you like more details on any of these strategies?</p>", suggestionData = new List<string> { } },
        new { prompt = "How do I prioritize tasks effectively?", response = "<p>To stay focused and productive, set daily goals by:</p> <ol><li><strong>Identifying Priorities:</strong> List important tasks based on deadlines or significance.</li> <li><strong>Breaking Down Tasks:</strong> Divide larger tasks into smaller, manageable steps.</li> <li><strong>Setting SMART Goals:</strong> Ensure goals are Specific, Measurable, Achievable, Relevant, and Time-bound. </li> <li><strong>Time Blocking:</strong>Schedule specific times for each task to stay organized.</li></ol> <p> Need more tips on any of these steps? </p>", suggestionData = new List<string> { } },
        new { prompt = "What tools or apps can help me prioritize tasks?", response = "<p>Here are some tools to help you prioritize tasks effectively:</p> <ol><li><strong>Google Keep:</strong> For simple note-taking and task organization with labels and reminders.</li> <li><strong>Scoro:</strong> A project management tool for streamlining activities and team collaboration.</li> <li><strong>Evernote:</strong> Great for note-taking, to-do lists, and reminders.</li> <li><strong>Todoist:</strong> A powerful task manager for setting priorities and tracking progress.</li></ol> <p>Are you looking for tools to manage a specific type of task or project?</p>", suggestionData = new List<string> { } },
        new { prompt = "How do I create an eye-catching e-book cover?", response = "<p>Creating an eye-catching e-book cover involves a few key steps:</p> <ol><li><strong>Understand your genre and audience:</strong> Research covers of popular books in your genre to see what appeals to your target readers.</li> <li><strong>Choose the right imagery and colors:</strong> Use high-quality images and a color scheme that reflects the tone and theme of your book.</li> <li><strong>Focus on typography:</strong> Select fonts that are readable and complement the overall design. The title should be prominent and easy to read even in thumbnail size.</li> <li><strong>Use design tools or hire a professional:</strong> Tools like Canva or Adobe Spark can help you create a professional-looking cover. Alternatively, consider hiring a graphic designer for a more polished result.</li></ol> <p>Would you like some tips on where to find good images or fonts for your cover?</p>", suggestionData = new List<string> { } },
        new { prompt = "What are common mistakes to avoid in e-book covers?", response = "<p>Here are some common mistakes to avoid when designing an e-book cover:</p> <ol><li><strong>Cluttered design:</strong> Overloading the cover with too many elements can make it look messy and unprofessional. Keep it simple and focused.</li> <li><strong>Poor quality images:</strong> Using low-resolution or generic stock images can detract from the overall appeal. Always opt for high-quality, relevant visuals.</li> <li><strong>Unreadable fonts:</strong> Fancy or overly intricate fonts can be hard to read, especially in thumbnail size. Choose clear, legible fonts for the title and author name.</li> <li><strong>Ignoring genre conventions:</strong> Each genre has its own visual cues. Not adhering to these can confuse potential readers about the bookï¿½s content.</li> <li><strong>Inconsistent branding:</strong> If you have a series or multiple books, ensure a consistent style across all covers to build a recognizable brand.</li></ol> <p>Would you like any specific advice on designing your cover?</p>", suggestionData = new List<string> { } },
    };

    var promptsJson = @Html.Raw(JsonConvert.SerializeObject(promptsData));
    var suggestionsJson = @Html.Raw(JsonConvert.SerializeObject(suggestions));
}

@section ControlsSection{
    <div class="control-section">
        <div class="template-aiassistview">
            @Html.EJS().AIAssistView("aiAssistView").Created("onCreated").PromptSuggestions(suggestions).PromptSuggestionsHeader("Hello! Ask Questions, to better understand how your prompt interacts with AI AssistView!").PromptRequest("onPromptRequest").BannerTemplate("#bannerContent").PromptItemTemplate("#promptItemTemplate").ToolbarSettings(new AIAssistViewToolbarSettings() { Items = ViewBag.ToolbarItems }).ResponseItemTemplate("#responseItemTemplate").PromptSuggestionItemTemplate("#promptSuggestionItemTemplate").Render()
        </div>
    </div>
    @*custom code start*@
    <style>
        .template-aiassistview {
            height: 650px;
            width: 65vw;
            margin: 0 auto;
        }

        .e-assistview-icon:before {
            margin-right: 10px;
        }

        .template-aiassistview .banner-content {
            display: flex;
            flex-direction: column;
            justify-content: center;
            text-align: center;
            align-items: center;
            padding: 10px 10px;
            width: 65%;
            margin: 0 auto;
        }

        .template-aiassistview .e-carousel.e-partial .e-carousel-slide-container {
            padding: 0 50px;
        }

        .template-aiassistview .banner-content h3 {
            display: flex;
            margin: 20px 0px;
            font-size: 25px;
        }

        .template-aiassistview .banner-content .carousel-template {
            padding: 5px;
            position: relative;
            display: flex;
            justify-content: center;
            cursor: pointer;
        }

        .template-aiassistview #ddMenu.e-btn.e-icon-btn {
            padding: 8px;
            line-height: 14px;
        }
        
        .template-aiassistview #ddMenu.e-dropdown-btn.e-btn .e-btn-icon {
            margin-left: 0;
            width: 1em;
        }

        .template-aiassistview .banner-content img {
            width: 100%;
            height: 250px;
            border-radius: 10px;
        }

        .template-aiassistview .banner-content .e-card {
            position: absolute;
            bottom: 20px;
            width: 86%;
            opacity: 0.8;
        }

        .template-aiassistview .banner-content .e-card-header {
            width: 100%;
            padding: 12px;
        }

        .template-aiassistview .e-aiassistview .e-views .e-suggestions li {
            padding: 0;
            border: none;
            box-shadow: none;
        }

        .template-aiassistview .suggestion-item {
            display: flex;
            align-items: center;
            background-color: #686868;
            color: white;
            padding: 4px 10px;
            opacity: 0.8;
            gap: 5px;
            height: 35px;
            border-radius: 5px;
        }

        .template-aiassistview .suggestion-item .content {
            text-overflow: ellipsis;
            white-space: nowrap;
            overflow: hidden;
        }

        .template-aiassistview #ddMenu {
            border-radius: 50%;
        }

        .template-aiassistview .promptItemContent,
        .template-aiassistview .responseItemContent {
            display: flex;
            flex-direction: column;
            gap: 10px;
        }

        .template-aiassistview .promptItemContent {
            align-items: flex-end;
            margin-right: 20px
        }

        .template-aiassistview .e-response-item-template .e-toolbar-items {
            margin-left: 35px;
        }

        .template-aiassistview .responseItemContent {
            margin-left: 20px
        }

        .template-aiassistview .promptItemContent .prompt-header,
        .template-aiassistview .responseItemContent .response-header {
            font-size: 20px;
            font-weight: bold;
            display: flex;
            align-items: center;
        }

        .template-aiassistview .promptItemContent .prompt-header span {
            margin-left: 10px;
        }

        .template-aiassistview .promptItemContent .content {
            margin-right: 35px;
        }

        .template-aiassistview .responseItemContent .content {
            margin-left: 35px;
        }

        .template-aiassistview .e-carousel .e-carousel-navigators .e-next .e-next-button,
        .template-aiassistview .e-carousel .e-carousel-navigators .e-next .e-next-button:focus,
        .template-aiassistview .e-carousel .e-carousel-navigators .e-next .e-next-button:hover,
        .template-aiassistview .e-carousel .e-carousel-navigators .e-previous .e-previous-button,
        .template-aiassistview .e-carousel .e-carousel-navigators .e-previous .e-previous-button:focus,
            .template-aiassistview .e-carousel .e-carousel-navigators .e-previous .e-previous-button:hover {
            outline: none;
            background-color: #f0f0f0;
            .e-btn-icon {
                color: #333;
            }
        }

        body[class*="dark"] .template-aiassistview .e-carousel .e-carousel-navigators .e-next .e-next-button,
        body[class*="high"] .template-aiassistview .e-carousel .e-carousel-navigators .e-next .e-next-button,
        body[class*="dark"] .template-aiassistview .e-carousel .e-carousel-navigators .e-next .e-next-button:focus,
        body[class*="high"] .template-aiassistview .e-carousel .e-carousel-navigators .e-next .e-next-button:focus,
        body[class*="dark"] .template-aiassistview .e-carousel .e-carousel-navigators .e-next .e-next-button:hover,
        body[class*="high"] .template-aiassistview .e-carousel .e-carousel-navigators .e-next .e-next-button:hover,
        body[class*="dark"] .template-aiassistview .e-carousel .e-carousel-navigators .e-previous .e-previous-button,
        body[class*="high"] .template-aiassistview .e-carousel .e-carousel-navigators .e-previous .e-previous-button,
        body[class*="dark"] .template-aiassistview .e-carousel .e-carousel-navigators .e-previous .e-previous-button:focus,
        body[class*="high"] .template-aiassistview .e-carousel .e-carousel-navigators .e-previous .e-previous-button:focus,
        body[class*="dark"] .template-aiassistview .e-carousel .e-carousel-navigators .e-previous .e-previous-button:hover,
        body[class*="high"] .template-aiassistview .e-carousel .e-carousel-navigators .e-previous .e-previous-button:hover {
            outline: none;
            background-color: #333;
            .e-btn-icon {
                color: #f0f0f0;
            }
        }

        @@media only screen and (max-width: 840px) {
            .template-aiassistview,
            .template-aiassistview .banner-content {
                width: 100%;
            }
        }
    </style>
    @*custom code end*@
}

@section PreScripts {
    <script>
        var assistObj;
        var prompts = @Html.Raw(promptsJson);
        var suggestions = @Html.Raw(suggestionsJson);
        var carouselData = @Html.Raw(Json.Encode(ViewBag.CarouselDataSource));
        var carouselObj = new ej.navigations.Carousel({
            width: '100%',
            height: '60%',
            showIndicators: false,
            buttonsVisibility: 'Visible',
            partialVisible: true,
            dataSource: carouselData,
            itemTemplate: '#carouselTemplate'
        });

        

        var splitBtnObj = new ej.splitbuttons.DropDownButton({
            items: [
                { text: 'Settings', iconCss: 'e-icons e-settings' },
                { separator: true },
                { text: 'Log out' }
            ],
            iconCss: 'e-icons e-user',
            cssClass: 'e-caret-hide',
        });

        function onCreated() {
            assistObj = this;
            carouselObj.appendTo('#bannerCarousel');
            splitBtnObj.appendTo('#ddMenu');

            carouselObj.element.addEventListener('click', function (e) {
                var target = e.target;
                var prompt = '';
                if (target.tagName === 'IMG') {
                    prompt = e.target.nextElementSibling.textContent;
                } else if (target.className === 'e-card-header') {
                    prompt = e.target.textContent;
                }
                if (prompt)
                    assistObj.executePrompt(prompt);
            });
        }

        function onPromptRequest(args) {
            setTimeout(function () {
                var foundPrompt = prompts.find(prompt => prompt.prompt == args.prompt);
                var defaultResponse = 'For real-time prompt processing, connect the AI AssistView control to your preferred AI service, such as OpenAI or Azure Cognitive Services. Ensure you obtain the necessary API credentials to authenticate and enable seamless integration.';
                assistObj.addPromptResponse(foundPrompt ? foundPrompt.response : defaultResponse);
                assistObj.promptSuggestions = foundPrompt?.suggestions || suggestions;
            }, 2000);
        }
    </script>
    <script id="promptItemTemplate" type="text/x-jsrender">
        <div class="promptItemContent">
            <div class="prompt-header">
                You
                <span class="e-icons e-user"></span>
            </div>
            <div class="content">${prompt}</div>
        </div>
    </script>
    <script id="responseItemTemplate" type="text/x-jsrender">
        <div class="responseItemContent">
            <div class="response-header">
                <span class="e-icons e-assistview-icon"></span>
                AI AssistView
            </div>
            <div class="content">${response}</div>
        </div>
    </script>

    <script id="promptSuggestionItemTemplate" type="text/x-jsrender">
        <div class='suggestion-item active'>
            <span class="e-icons e-circle-info"></span>
            <div class="content">${promptSuggestion}</div>
        </div>
    </script>

    <script id="bannerContent" type="text/x-jsrender">
        <div class="banner-content">
            <h3><span class="e-icons e-assistview-icon"></span>AI Assistance</h3>
            <div id="bannerCarousel"></div>
        </div>
    </script>

    <script id="carouselTemplate" type="text/x-jsrender">
        <div class="carousel-template">
            <img src=${ImgPath} />
            <div class="e-card">
                <div class="e-card-header">
                    ${Suggestion}
                </div>
            </div>
        </div>
    </script>
}

@section Meta{
    <meta name="description" content="This example demonstrates the Template in ASP.NET MVC AI AssistView control. Explore here for more details." />
}
@section ActionDescription{
    <div id="action-description">
        <p>This sample demonstrates the template functionality of the AI AssistView control.</p>
    </div>
}
@section Description{
    <div id="description">
        <p>In this example, the AI AssistView control uses customizable templates for the banner, prompts, responses, and suggestions. We have used the <code>bannerViewTemplate</code>, <code>promptItemTemplate</code>, <code>responseItemTemplate</code> and <code>promptSuggestionItemTemplate</code> to define the structure and appearance of these elements.
        </p>
        <p>
            By using the <code>executePrompt</code> method you can trigger the prompt request externally and generate the output based on the <code>promptRequest</code> data returned. If found, the response will be displayed and suggestions updated.
        </p>
    </div>
}
@section Title{
    <title>ASP.NET MVC AI AssistView Template Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Template in ASP.NET MVC AI AssistView Control</h1>
}