@using Syncfusion.EJ2
@using Syncfusion.EJ2.Spreadsheet

@section ControlsSection{
    <div class="control-section">
        @Html.EJS().Spreadsheet("spreadsheet").ShowRibbon(false).ShowFormulaBar(false).Sheets(sheet =>
   {
       sheet.Name("Monthly Budget").SelectedRange("D13").Rows(row =>
       {
           row.Cells(cell =>
           {
               cell.Value("Category").Style(new SpreadsheetCellStyle() { FontWeight = FontWeight.Bold, TextAlign = TextAlign.Center }).Add();
               cell.Value("Planned cost").Style(new SpreadsheetCellStyle() { FontWeight = FontWeight.Bold, TextAlign = TextAlign.Center }).Add();
               cell.Value("Actual cost").Style(new SpreadsheetCellStyle() { FontWeight = FontWeight.Bold, TextAlign = TextAlign.Center }).Add();
               cell.Value("Difference").Style(new SpreadsheetCellStyle() { FontWeight = FontWeight.Bold, TextAlign = TextAlign.Center }).Add();
           }).Add();
           row.Cells(cell =>
           {
               cell.Value("Food").Add();
               cell.Value("7000").Format("$#,##0.00").Add();
               cell.Value("8120").Format("$#,##0.00").Add();
               cell.Formula("=B2-C2").Format("$#,##0.00").Add();
           }).Add();
           row.Cells(cell =>
           {
               cell.Value("Loan").Add();
               cell.Value("1500").Format("$#,##0.00").Add();
               cell.Value("1500").Format("$#,##0.00").Add();
               cell.Formula("=B3-C3").Format("$#,##0.00").Add();
           }).Add();
           row.Cells(cell =>
           {
               cell.Value("Medical").Add();
               cell.Value("300").Format("$#,##0.00").Add();
               cell.Value("0").Format("$#,##0.00").Add();
               cell.Formula("=B4-C4").Format("$#,##0.00").Add();
           }).Add();
           row.Cells(cell =>
           {
               cell.Value("Clothing").Add();
               cell.Value("400").Format("$#,##0.00").Add();
               cell.Value("140").Format("$#,##0.00").Add();
               cell.Formula("=B5-C5").Format("$#,##0.00").Add();
           }).Add();
           row.Cells(cell =>
           {
               cell.Value("Education").Add();
               cell.Value("900").Format("$#,##0.00").Add();
               cell.Value("750").Format("$#,##0.00").Add();
               cell.Formula("=B6-C6").Format("$#,##0.00").Add();
           }).Add();
           row.Cells(cell =>
           {
               cell.Value("Insurance").Add();
               cell.Value("30").Format("$#,##0.00").Add();
               cell.Value("30").Format("$#,##0.00").Add();
               cell.Formula("=B7-C7").Format("$#,##0.00").Add();
           }).Add();
           row.Cells(cell =>
           {
               cell.Value("Utilities").Add();
               cell.Value("130").Format("$#,##0.00").Add();
               cell.Value("160").Format("$#,##0.00").Add();
               cell.Formula("=B8-C8").Format("$#,##0.00").Add();
           }).Add();
           row.Cells(cell =>
           {
               cell.Value("Enterainment").Add();
               cell.Value("500").Format("$#,##0.00").Add();
               cell.Value("730").Format("$#,##0.00").Add();
               cell.Formula("=B9-C9").Format("$#,##0.00").Add();
           }).Add();
           row.Cells(cell =>
           {
               cell.Value("Maintainance").Add();
               cell.Value("50").Format("$#,##0.00").Add();
               cell.Value("70").Format("$#,##0.00").Add();
               cell.Formula("=B10-C10").Format("$#,##0.00").Add();
           }).Add();
           row.Cells(cell =>
           {
               cell.Value("Transportation").Add();
               cell.Value("250").Format("$#,##0.00").Add();
               cell.Value("400").Format("$#,##0.00").Add();
               cell.Formula("=B11-C11").Format("$#,##0.00").Add();
           }).Add();
           row.Cells(cell =>
           {
               cell.Value("Gifts/Donations").Add();
               cell.Value("0").Format("$#,##0.00").Add();
               cell.Value("100").Format("$#,##0.00").Add();
               cell.Formula("=B12-C12").Format("$#,##0.00").Add();
           }).Add();
           row.Cells(cell =>
           {
               cell.Index(2).Value("Total Difference:").Style(new SpreadsheetCellStyle() { FontWeight = FontWeight.Bold, TextAlign = TextAlign.Right }).Add();
               cell.Formula("=D2-D12").Format("$#,##0.00").Style(new SpreadsheetCellStyle() { FontWeight = FontWeight.Bold }).Add();
           }).Add();
       }).Columns(column =>
       {
           column.Width(110).Add();
           column.Width(115).Add();
           column.Width(110).Add();
           column.Width(100).Add();
       }).Add();
   }).Render()
    </div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Cell Data Binding in ASP.NET MVC Spreadsheet control. Explore here for more details."/>
                }
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample illustrates a monthly budget for a home using planned versus actual costs with cell data binding feature.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            The <code>Spreadsheet</code> component supports data binding for individual cells in a sheet. You can set value,
            styles and format to a cell using following properties:
            <ul>
                <li><code>index</code> - Specify index for a cell.</li>
                <li><code>value</code> - Specify cell value.</li>
                <li><code>style</code> - Specify style for the cell.</li>
                <li><code>format</code> - Apply number formatting for the cell.</li>
            </ul>
        </p>
        <p>
            More information about cell data binding feature can be found in this
            <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/spreadsheet/getting-started-mvc" aria-label="documentation section">
                documentation
            <span class="sr-only">opens in a new tab</span></a> section.
        </p>
    </div>
        }
@*custom code start*@
<style>
    .control-section {
        height: 550px;
    }
    #sb-content .e-spreadsheet .e-tab .e-tab-text {
        display: inherit;
    }
</style>
@*custom code end*@

@section Title{
                    <title>ASP.NET MVC Spreadsheet Cell Data Binding Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Cell Data Binding in ASP.NET MVC Spreadsheet Control</h1>
                }