@using Syncfusion.EJ2
@using Syncfusion.EJ2.Spreadsheet

@section ControlsSection{
    <div class="control-section">
        @Html.EJS().Spreadsheet("spreadsheet").Created("createdHandler").OpenUrl("NotesOpen").SaveUrl("NotesSave").Sheets(sheet =>
        {
        sheet.Name("Cart").Ranges(ranges =>
        {
        ranges.DataSource(ViewBag.dataSource).StartCell("B3").Add();
        }).Rows(row =>
        {
        row.Cells(cell =>
        {
        cell.RowSpan(2).ColSpan(6).Value("Shopping Cart").Style(new SpreadsheetCellStyle() { FontWeight = FontWeight.Bold, TextAlign = TextAlign.Center, FontSize = "20pt", BackgroundColor = "#279377", VerticalAlign = VerticalAlign.Middle, Color = "#ffffff" }).Add();
        }).Add();
        row.Index(2).Cells(cell =>
        {
        cell.Value("Product ID").Style(new SpreadsheetCellStyle() { FontWeight = FontWeight.Bold, TextAlign = TextAlign.Center }).Add();
        cell.Style(new SpreadsheetCellStyle() { FontWeight = FontWeight.Bold, TextAlign = TextAlign.Center }).Add();
        cell.Style(new SpreadsheetCellStyle() { FontWeight = FontWeight.Bold, TextAlign = TextAlign.Center }).Add();
        cell.Style(new SpreadsheetCellStyle() { FontWeight = FontWeight.Bold, TextAlign = TextAlign.Center }).Add();
        cell.Style(new SpreadsheetCellStyle() { FontWeight = FontWeight.Bold, TextAlign = TextAlign.Center }).Add();
        cell.Style(new SpreadsheetCellStyle() { FontWeight = FontWeight.Bold, TextAlign = TextAlign.Center }).Add();
        }).Add();
        row.Cells(cell =>
        {
        cell.Value("101").Add();
        }).Add();
        row.Cells(cell =>
        {
        cell.Value("102").Add();
        }).Add();
        row.Cells(cell =>
        {
        cell.Value("103").Add();
        }).Add();
        row.Cells(cell =>
        {
        cell.Value("104").Add();
        }).Add();
        row.Cells(cell =>
        {
        cell.Value("105").Add();

        }).Add();
        row.Cells(cell =>
        {
        cell.Value("106").Add();
        }).Add();
        row.Cells(cell =>
        {
        cell.Value("107").Add();
        }).Add();
        row.Cells(cell =>
        {
        cell.Value("108").Add();
        }).Add();
        row.Cells(cell =>
        {
        cell.Value("109").Add();
        }).Add();
        row.Cells(cell =>
        {
        cell.Index(4).Value("Total Amount").Style(new SpreadsheetCellStyle() { Border = "1px solid #A6A6A6", FontWeight = FontWeight.Bold, VerticalAlign = VerticalAlign.Middle, TextAlign = TextAlign.Center }).Add();
        cell.Formula("=Sum(F4:F12)").Format("$#,##0.00").Style(new SpreadsheetCellStyle() { FontWeight = FontWeight.Bold, VerticalAlign = VerticalAlign.Middle, TextAlign = TextAlign.Right, Border = "1px solid #A6A6A6" }).Add();
        }).Add();
        }).Columns(column =>
        {
        column.Width(88).Add();
        column.Width(120).Add();
        column.Width(100).Add();
        column.Width(100).Add();
        column.Width(100).Add();
        column.Width(110).Add();
        }).Add();

        }).Render()
    </div>
}

@section Meta{
    <meta name="description" content="This example demonstrates the Hyperlink in ASP.NET MVC Spreadsheet control. Explore here for more details." />
}
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates the <b>Notes</b> feature using the shopping cart scenario as an example. When you hover your mouse over the red indicator in the right corner of the cell, any note attached to the cell will be displayed.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            The <b>Notes</b> feature allows you to add comments while reviewing a document. You can enable or disable the notes option using the <code>enableNotes</code> property; by default, it's enabled. To insert a note into cells, use the
            <b>"Add Note"</b> context menu option. Once added, notes can be edited or removed using the <b>"Edit Note"</b> and
            <b>"Delete Note"</b> context menu options respectively.
        </p>
        <ul>
            <li>
                <span class="key-class"><kbd>Shift</kbd> + <kbd>F2</kbd></span>
                <span>- Add a note to the current cell.</span>
            </li>
            <li>
                <span class="key-class"><kbd>Esc</kbd></span>
                <span>- Save and close the note.</span>
            </li>
        </ul>
    </div>
}

<script>
    function createdHandler() {
        this.numberFormat('$#,##0.00', 'F4:F12');
        this.numberFormat('$###', 'E4:E12');
        this.freezePanes(3, 0);
        this.cellFormat({ textAlign: 'left' }, 'A4:A12');
        this.updateCell({ values: 'Coffee Maker', notes: 'This product has been the most profitable this month.' }, "B4");
        this.updateCell({ values: 'Apple Pencil', notes: 'This product has had the lowest sales in terms of quantity this month.' }, "B5");
        this.updateCell({ values: 'Juicer', notes: 'This product has been the least profitable this month.' }, "B6");
        this.updateCell({ values: 'Tea Kettle', notes: 'This product has had the highest sales in terms of quantity this month.' }, "B8");
    }
</script>

@*custom code start*@

<style>
    .key-class {
        display: inline-block;
        width: 130px;
    }

    .control-section {
        height: 550px;
    }
</style>

@*custom code end*@
@section Title{
    <title>ASP.NET MVC Spreadsheet Notes Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Notes in ASP.NET MVC Spreadsheet Control</h1>
}
