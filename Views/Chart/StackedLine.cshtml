@using Syncfusion.EJ2;
@section ControlsSection{
    <div class="control-section" align="center">
        
      @Html.EJS().Chart("container-vertical").Series(series =>
 {
     series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.StackingLine).Opacity(1).Marker(mkr => mkr.Visible(true).Width(7).Height(7).Shape(Syncfusion.EJ2.Charts.ChartShape.Circle).IsFilled(true)).XName("ExpensesCategory").YName("JohnExpenses").DataSource(ViewBag.ChartPoints).Name("John").Width(2).Add();
     series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.StackingLine).Opacity(1).Marker(mkr => mkr.Visible(true).Width(7).Height(7).Shape(Syncfusion.EJ2.Charts.ChartShape.Diamond).IsFilled(true)).XName("ExpensesCategory").YName("PeterExpenses").DataSource(ViewBag.ChartPoints).Name("Peter").Width(2).Add();
     series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.StackingLine).Opacity(1).Marker(mkr => mkr.Visible(true).Width(5).Height(5).Shape(Syncfusion.EJ2.Charts.ChartShape.Rectangle).IsFilled(true)).XName("ExpensesCategory").YName("SteveExpenses").DataSource(ViewBag.ChartPoints).Name("Steve").Width(2).Add();
     series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.StackingLine).Opacity(1).Marker(mkr => mkr.Visible(true).Width(6).Height(6).Shape(Syncfusion.EJ2.Charts.ChartShape.Triangle).IsFilled(true)).XName("ExpensesCategory").YName("CharleExpenses").DataSource(ViewBag.ChartPoints).Name("Charle").Width(2).Add();
 }).PrimaryXAxis(px => px.ValueType(Syncfusion.EJ2.Charts.ValueType.Category)
 .MajorGridLines(mg=>mg.Width(0)).MinorGridLines(mg => mg.Width(0))
 .MajorTickLines(mt => mt.Width(0)).
 MinorTickLines(mt => mt.Width(0)).LineStyle(ls => ls.Width(0)).Interval(1)
       ).PrimaryYAxis(py => py.LabelFormat("${value}").Maximum(400).Minimum(0).Interval(100).LineStyle(ly => ly.Width(0)).MajorGridLines(mg=>mg.Width(1)).MinorGridLines(mg => mg.Width(1))
           .MajorTickLines(mt => mt.Width(0)).MinorTickLines(mt => mt.Width(0))
       ).Title("Family Expenses for Year").ChartArea(area => area.Border(br=>br.Width(0))).Tooltip(tt => tt.Enable(true)).LegendSettings(leg => leg.EnableHighlight(true)).Load("load").Render()
        </div>

    @*custom code start*@
    <style>
        #control-container {
            padding: 0px !important;
        }
        #container {
            display: block;
        }
    </style>
    @*custom code end*@
    <script>
        var load = function (args) {
            var selectedTheme = themeName ? themeName : 'Fluent2';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast').replace(/5.3/i, '5');
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "75%";
            args.chart.primaryXAxis.labelIntersectAction = ej.base.Browser.isDevice?'None':'Trim';
            args.chart.primaryXAxis.labelRotation = ej.base.Browser.isDevice?'-45':'0';
        }
    </script>
}
@section Meta{
                    <meta name="description" content="This example demonstrates the Stacked Line in ASP.NET MVC Chart control. Explore here for more details."/>
                }
@section ActionDescription{
    <p>
        This <a target="_blank" href="https://www.syncfusion.com/aspnet-mvc-ui-controls/charts/chart-types/stacked-line-chart" aria-label="ASP.NET MVC Stacked Line Chart">ASP.NET MVC Stacked Line Chart<span class="sr-only">opens in a new tab</span></a> example visualizes the family expenses data with a stacked line series in the chart to identify who spent more money in each category.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure the stacked line chart. The stacked line chart visualizes data with y-values stacked one over another in a series order. It shows the relationship between individual values to the total sum of points.
    </p>
    <p>
        <code>Tooltip</code> is enabled in this example. To see the tooltip in action, hover a point or tap on a point in touch enabled devices.
    </p>
    <p>
         More information about the stacked line series can be found in this
         <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/chart/chart-types#line-charts" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
     </p> 
}
@section Title{
                    <title>ASP.NET MVC Chart Stacked Line Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Charts</h1>
                }