 @using System.Windows.Forms @using Syncfusion.EJ2;
 @using Syncfusion.EJ2.Charts
 @section ControlsSection{
	<script src="~/Scripts/theme-color.js"></script>
	<div class="control-section" align="center">

		@Html.EJS().Chart("container").Series(series =>
	   {
		   series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column).XName("Country").YName("Rate").EnableTooltip(false)
			   .Marker(mr => mr.DataLabel(dl => dl.Visible(false).Position(Syncfusion.EJ2.Charts.LabelPosition.Top).Font(ff => ff.FontWeight("600").Color("#ffffff"))))
			   .Opacity(0.5).ColumnWidth(0.8).DataSource(ViewBag.ChartPoints).Add();
		   series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column).XName("Country").YName("Literacy_Rate").TooltipMappingName("Text")
			   .Marker(mr => mr.DataLabel(dl => dl.Visible(true).Name("text").Position(Syncfusion.EJ2.Charts.LabelPosition.Top).Font(ff => ff.FontWeight("600").Color("#ffffff"))))
			   .ColumnWidth(0.8).DataSource(ViewBag.ChartPoints).Add();
	   }).PrimaryXAxis(px => px.Interval(1).MajorGridLines(mg=>mg.Width(0))
		   .LabelPosition(Syncfusion.EJ2.Charts.AxisPosition.Outside).ValueType(Syncfusion.EJ2.Charts.ValueType.Category)
			).PrimaryYAxis(py => py.Minimum(0).Maximum(100).LabelFormat("{value}%")
				.Interval(25).MajorTickLines(mg => mg.Width(0)).MinorTickLines(mg => mg.Width(0)).LineStyle(mg => mg.Width(0))
			).Title("Literacy rate by Country in 2015").ChartArea(area => area.Border(br => br.Width(0))
			).Tooltip(tt => tt.Enable(true).Header("<b>${point.x}</b>").Format("Rate : <b>${point.tooltip}</b>")).LegendSettings(lg => lg.Visible(false)
			).EnableSideBySidePlacement(false).Load("load").PointRender("pointRender").Render()
		</div>
	
	@*custom code start*@
	<style>
		#control-container {
			padding: 0px !important;
		}
	</style>
	@*custom code end*@
	<script>
        var load = function (args) {
            var selectedTheme = themeName ? themeName : 'Fluent2';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast').replace(/5.3/i, '5');
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "77%";
			args.chart.series[0].cornerRadius.bottomLeft = ej.base.Browser.isDevice ? 12 : 35;
			args.chart.series[0].cornerRadius.bottomRight = ej.base.Browser.isDevice ? 12 : 35;
			args.chart.series[0].cornerRadius.topLeft = ej.base.Browser.isDevice ? 12 : 35;
			args.chart.series[0].cornerRadius.topRight = ej.base.Browser.isDevice ? 12 : 35;
			args.chart.series[1].cornerRadius.bottomLeft = ej.base.Browser.isDevice ? 12 : 35;
            args.chart.series[1].cornerRadius.bottomRight = ej.base.Browser.isDevice ? 12 : 35;
            args.chart.series[1].cornerRadius.topLeft = ej.base.Browser.isDevice ? 12 : 35;
            args.chart.series[1].cornerRadius.topRight = ej.base.Browser.isDevice ? 12 : 35;
			args.chart.series[1].marker.dataLabel.enableRotation = ej.base.Browser.isDevice ? "true" : "false";
            args.chart.series[1].marker.dataLabel.angle = ej.base.Browser.isDevice ? -90 : 0;
			args.chart.series[1].marker.dataLabel.font.size = ej.base.Browser.isDevice ? "9px" : "11px";
			args.chart.primaryXAxis.labelIntersectAction = ej.base.Browser.isDevice?'None':'Rotate45';
            args.chart.primaryXAxis.labelRotation = ej.base.Browser.isDevice?'-45':'0';
        };
        
        var pointRender = function (args) {
            var selectedTheme = location.hash.split('/')[1];
            selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';
            if (selectedTheme && selectedTheme.indexOf('fabric-dark') > -1) {
                if (args.series.yName === "Rate")
                    args.fill = "f9fafb";
            }
            else if (selectedTheme && selectedTheme.indexOf('fabric') > -1) {
                if (args.series.yName === "Rate")
                    args.fill = "grey";
            }
            else if (selectedTheme === 'material-dark') {
                if (args.series.yName === "Rate")
                    args.fill = "f9fafb";
            }
            else if (selectedTheme === 'material') {
                if (args.series.yName === "Rate")
                    args.fill = "grey";
            }
            else if (selectedTheme === 'bootstrap5-dark') {
                if (args.series.yName === "Rate")
                    args.fill = "#f9fafb";
            }
            else if (selectedTheme === 'bootstrap5') {
                if (args.series.yName === "Rate")
                    args.fill = "grey";
            }
            else if (selectedTheme === 'bootstrap-dark') {
                if (args.series.yName === "Rate")
                    args.fill = "f9fafb";
            }
            else if (selectedTheme === 'bootstrap') {
                if (args.series.yName === "Rate")
                    args.fill = "grey";
            }
            else if (selectedTheme === 'highcontrast') {
                if (args.series.yName === "Rate")
                    args.fill = "#f9fafb";
            }
            else if (selectedTheme === 'fluent-dark') {
                if (args.series.yName === "Rate")
                    args.fill = "#f9fafb";
            }
            else if (selectedTheme === 'fluent') {
                if (args.series.yName === "Rate")
                    args.fill = "grey";
            }
            else if (selectedTheme === 'tailwind-dark') {
                if (args.series.yName === "Rate")
                    args.fill = "#f9fafb";
            }
            else if (selectedTheme === 'tailwind') {
                if (args.series.yName === "Rate")
                    args.fill = "grey";
            }
            else if (selectedTheme === 'material3-dark') {
                if (args.series.yName === "Rate")
                    args.fill = "f9fafb";
            }
            else if (selectedTheme === 'material3') {
                if (args.series.yName === "Rate")
                    args.fill = "grey";
            }
            else if (selectedTheme === 'fluent2-highcontrast' || selectedTheme === 'fluent2-dark') {
                if (args.series.yName == "Rate")
                    args.fill = "#f9fafb";
            }
            else if (selectedTheme === 'fluent2') {
                if (args.series.yName == "Rate")
                    args.fill = "grey";
            }
            else {
                if (args.series.yName === "Rate")
                    args.fill = "grey";
            }
        }		
	</script>
}
@*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Rounded Column in ASP.NET MVC Chart control. Explore here for more details."/>
                }
@*custom code end*@
@section ActionDescription{
	<p>
		This sample shows the literacy rate by country in 2015 with the default column series in the chart.
	</p>
}
@section Description{
	<p>
		In this example, you can see how to render and configure the column chart. The column chart is used to compare the frequency, count, total, or average of data in different categories. You can use the <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Charts.ChartCornerRadius.html" aria-label="ChartCornerRadius">ChartCornerRadius<span class="sr-only">opens in a new tab</span></a> option to customize the vertical rectangle, resulting in a rounded column.
	</p>
	<p>
		<code>Tooltip</code> is enabled in this example. To see the tooltip in action, hover a point or tap on a point in touch enabled devices.
	</p>
}
@section Title{
                    <title>ASP.NET MVC Chart Rounded Column Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Charts</h1>
                }