@using Syncfusion.EJ2
@using Syncfusion.EJ2.DropDowns
@{
    ViewBag.Title = "Selection";
}

@section ControlsSection{
    <div class="col-lg-9 control-section">
        <div class="content-wrapper">

            @(Html.EJS().Gantt("Selection").DataSource((IEnumerable<object>)ViewBag.DataSource).Height("450px").HighlightWeekends(true)
                .AllowSelection(true).TreeColumnIndex(1)
                .TaskFields(ts => ts.Id("TaskId").Name("TaskName").StartDate("StartDate").EndDate("EndDate").Duration("Duration").Progress("Progress")
                .Dependency("Predecessor").Child("SubTasks"))
                .LabelSettings(ls => ls.LeftLabel("TaskName"))
                .SelectionSettings(ss => ss.Mode(Syncfusion.EJ2.Grids.SelectionMode.Row).Type(Syncfusion.EJ2.Grids.SelectionType.Single).EnableToggle(false))
                .SplitterSettings(sp => sp.ColumnIndex(2))
                .ProjectStartDate("03/27/2024")
                .ProjectEndDate("07/06/2024")
                .Render()
            )
        </div>
    </div>

    <div class="col-lg-3 property-section">
        <table id="property" title="Properties">
            <tr>
                <td style="width: 100%">
                    <div style="fontSize: 15px">
                        Selection Mode
                    </div>
                </td>
            </tr>
            <tr>
                <td style="width: 100%;padding-right: 5px">
                    <div style="width: 150px">
                        @(Html.EJS().DropDownList("SelectionModeList").DataSource((IEnumerable<object>)ViewBag.Data1).PopupWidth("100px")
                            .Fields(new DropDownListFieldSettings { Text = "type", Value = "id" }).Value("Row")
                            .Render()
                        )
                    </div>
                </td>
            </tr>
            <tr>
                <td style="width: 100%">
                    <div style="fontSize: 15px">
                        Selection Type
                    </div>
                </td>
            </tr>
            <tr>
                <td style="width: 100%;padding-right: 5px">
                    <div style="width: 150px">
                        @(Html.EJS().DropDownList("SelectionTypeList").DataSource((IEnumerable<object>)ViewBag.Data2).PopupWidth("100px")
                            .Fields(new DropDownListFieldSettings { Text = "type", Value = "id" }).Value("Single")
                            .Render()
                        )
                    </div>
                </td>
            </tr>
            <tr>
                <td style="width: 100%">
                    <div style="fontSize: 15px">
                        Toggle Selection
                    </div>
                </td>
            </tr>
            <tr>
                <td style="width: 100%;padding-right: 5px">
                    <div style="width: 150px">
                        @(Html.EJS().DropDownList("SelectionToggleList").DataSource((IEnumerable<object>)ViewBag.Data3).PopupWidth("100px")
                            .Fields(new DropDownListFieldSettings { Text = "type", Value = "id" }).Value(false)
                            .Render()
                        )
                    </div>
                </td>
            </tr>
            <tr>
                <td style="width: 30%;">
                    <div>
                        @(Html.EJS().Button("Update").Content("Update").Render())
                    </div>
                </td>
            </tr>
        </table>
    </div>

    <script>
        document.getElementById('Update').onclick = function () {
            var ganttObj = document.getElementById("Selection").ej2_instances[0];
            var mode = SelectionModeList.value;
            var type = SelectionTypeList.value;
            var toggleList = document.getElementById("SelectionToggleList").ej2_instances[0];
            var toggle = toggleList.value;
            ganttObj.selectionSettings.mode = mode;
            ganttObj.selectionSettings.type = type;
            ganttObj.selectionSettings.enableToggle = toggle;
        };
    </script>

}

@section ActionDescription{
    <div id="action-description">
        <p>
            The selection feature enables you to highlight row or cell. It can be enabled by setting
            <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/syncfusion.ej2.gantt.gantt.html#Syncfusion_EJ2_Gantt_Gantt_AllowSelection">allowSelection</a> to <code>true</code>.
        </p>
    </div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Selection in ASP.NET MVC Gantt control. Explore here for more details."/>
                }

@section Description{
    <div id="description">
        <p>
            The Gantt control supports two types of selection that can be set by using the <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Gantt.GanttSelectionSettings.html#Syncfusion_EJ2_Gantt_GanttSelectionSettings_Type">selectionSettings.type</a> property.
            They are:
        </p>
        <ul>
            <li><code>Single</code> - Sets a single value by default and allows only selection of a single row or a cell.</li>
            <li><code>Multiple</code> - Allows you to select multiple rows or cells. To perform the multi-selection, press and hold the CTRL key and click the desired rows or cells.</li>
        </ul>
        <p>
            The Gantt control supports three types of selection modes that can be set by using the <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Gantt.GanttSelectionSettings.html#Syncfusion_EJ2_Gantt_GanttSelectionSettings_Mode">selectionSettings.mode</a property.
            They are:
        </p>
        <ul>
            <li><code>Row</code> - Allows you to select only rows, and the row value is set by default.</li>
            <li><code>Cell</code> - Allows you to select only cells.</li>
            <li><code>Both</code> - Allows you to select rows and cells at the same time.</li>
        </ul>
        <p>
            The Gantt control supports toggle selection that can be set by using the <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Gantt.GanttSelectionSettings.html#Syncfusion_EJ2_Gantt_GanttSelectionSettings_EnableToggle">selectionSettings.enableToggle</a> property.
        </p>
    </div>

}

@section Title{
                    <title>ASP.NET MVC Gantt Selection Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Selection in ASP.NET MVC Gantt Control</h1>
                }