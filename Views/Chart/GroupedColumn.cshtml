@using Syncfusion.EJ2;
<script src="~/Scripts/theme-color.js"></script>
@section ControlsSection{
    <div class="control-section" align="center">
        
                @Html.EJS().Chart("container").PrimaryXAxis(px => px.ValueType(Syncfusion.EJ2.Charts.ValueType.Category).MajorGridLines(mg => mg.Width(0)).MajorTickLines(mt => mt.Width(0)).Interval(1)
                ).PrimaryYAxis(py => py.LineStyle(ls => ls.Width(0)).MajorTickLines(mt => mt.Width(0)).Title("Medal Count")
                ).ChartArea(area => area.Border(br => br.Width(0))).Series(series =>
                {
                    series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column).XName("Year").YName("USA_Total")
                    .ColumnWidth(0.7).ColumnSpacing(0.1).Name("USA Total Medals").GroupName("USA")
                    .Marker(marker => marker.DataLabel(label => label.Visible(true).Position(Syncfusion.EJ2.Charts.LabelPosition.Top)
                    .Font(font => font.FontWeight("600").Color("#ffffff")))).DataSource(ViewBag.ChartPoints).Add();

                    series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column).XName("Year").YName("USA_Gold")
                    .ColumnWidth(0.5).ColumnSpacing(0.1).Name("USA Gold Medals").GroupName("USA")
                    .Marker(marker => marker.DataLabel(label => label.Visible(true).Position(Syncfusion.EJ2.Charts.LabelPosition.Top)
                    .Font(font => font.FontWeight("600").Color("#ffffff")))).DataSource(ViewBag.ChartPoints).Add();

                    series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column).XName("Year").YName("UK_Total")
                    .ColumnWidth(0.7).ColumnSpacing(0.1).Name("UK Total Medals").GroupName("UK")
                    .Marker(marker => marker.DataLabel(label => label.Visible(true).Position(Syncfusion.EJ2.Charts.LabelPosition.Top)
                    .Font(font => font.FontWeight("600").Color("#ffffff")))).DataSource(ViewBag.ChartPoints).Add();

                    series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column).XName("Year").YName("UK_Gold")
                    .ColumnWidth(0.5).ColumnSpacing(0.1).Name("UK Gold Medals").GroupName("UK")
                    .Marker(marker => marker.DataLabel(label => label.Visible(true).Position(Syncfusion.EJ2.Charts.LabelPosition.Top)
                    .Font(font => font.FontWeight("600").Color("#ffffff")))).DataSource(ViewBag.ChartPoints).Add();

                    series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column).XName("Year").YName("China_Total")
                    .ColumnWidth(0.7).ColumnSpacing(0.1).Name("China Total Medals").GroupName("China")
                    .Marker(marker => marker.DataLabel(label => label.Visible(true).Position(Syncfusion.EJ2.Charts.LabelPosition.Top)
                    .Font(font => font.FontWeight("600").Color("#ffffff")))).DataSource(ViewBag.ChartPoints).Add();

                    series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column).XName("Year").YName("China_Gold")
                    .ColumnWidth(0.5).ColumnSpacing(0.1).Name("China Gold Medals").GroupName("China")
                    .Marker(marker => marker.DataLabel(label => label.Visible(true).Position(Syncfusion.EJ2.Charts.LabelPosition.Top)
                    .Font(font => font.FontWeight("600").Color("#ffffff")))).DataSource(ViewBag.ChartPoints).Add();
                }).Title("Olympics Medal Tally").Load("load").Tooltip(tooltip => tooltip.Enable(true)).Render()
            </div>
        
    @*custom code start*@
    <style>
        #control-container {
            padding: 0px !important;
        }
    </style>
    @*custom code end*@
    <script>
        var load = function (args) {
            var selectedTheme = themeName ? themeName : 'Fluent2';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast').replace(/5.3/i, '5');
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "75%";
        };
    </script>
}
@*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Grouped Column in ASP.NET MVC Chart control. Explore here for more details."/>
                }
@*custom code end*@
@section ActionDescription{
    <p>
        This sample visualizes the Olympics medal count using a grouped column series. Data labels are used to display the values of data points.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure column charts. Column charts are used for comparing the frequency, count, total or average of data in different categories. You can group the column series by using the <code>GroupName</code> property.
    </p>
    <p>
        <code>Tooltip</code> is enabled in this example. To see the tooltip in action, hover over a point or tap on a point in touch-enabled devices.
    </p>
    <p>
        More information about the column series can be found in this
        <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/chart/chart-types#column-charts" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
    </p>
}
@section Title{
                    <title>ASP.NET MVC Chart Grouped Column Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Charts</h1>
                }