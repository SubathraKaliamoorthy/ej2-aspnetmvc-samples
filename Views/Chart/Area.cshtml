@using Syncfusion.EJ2;
@section ControlsSection{
    <div class="control-section" align="center">

        @(Html.EJS().Chart("container")
            .Series(sr =>
            {
                sr.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Area)
                    .XName("Period")
                   .YName("USD")
                    .Border(br => br.Width(1.5).Color("white"))
                   .DataSource(ViewBag.Compact)
                   .Add();
                sr.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Area)
                    .XName("Period")
                   .YName("USD")
                    .Border(br => br.Width(1.5).Color("white"))
                   .DataSource(ViewBag.Download)
                   .Add();
                sr.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Area)
                    .XName("Period")
                    .YName("USD")
                    .Border(br => br.Width(1.5).Color("white"))
                    .DataSource(ViewBag.Streaming)
                    .Add();
                sr.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Area)
                    .XName("Period")
                    .YName("USD")
                    .Border(br => br.Width(1.5).Color("white"))
                    .DataSource(ViewBag.Casette)
                    .Add();
                sr.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Area)
                    .XName("Period")
                    .YName("USD")
                    .Border(br => br.Width(1.5).Color("white"))
                    .DataSource(ViewBag.Vinyl)
                    .Add();
                sr.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Area)
                    .XName("Period")
                    .YName("USD")
                    .Border(br => br.Width(1.5).Color("white"))
                    .DataSource(ViewBag.Track)
                    .Add();
                sr.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Area)
                    .XName("Period")
                    .YName("USD")
                    .Border(br => br.Width(1.5).Color("white"))
                    .DataSource(ViewBag.Other)
                    .Add();
            })
            .Annotations(an => {
                           an.Region(Syncfusion.EJ2.Charts.Regions.Series).X("8%").Y("95%").Add();
                           an.Region(Syncfusion.EJ2.Charts.Regions.Series).X("12%)").Y("80%").Add();
                           an.Region(Syncfusion.EJ2.Charts.Regions.Series).X("35%").Y("87%").Add();
                                   an.Region(Syncfusion.EJ2.Charts.Regions.Series).X("63%").Y("70%").Add();
                                   an.Region(Syncfusion.EJ2.Charts.Regions.Series).X("75%").Y("98%").Add();
                                   an.Region(Syncfusion.EJ2.Charts.Regions.Series).X("85%").Y("93%").Add();
                                   an.Region(Syncfusion.EJ2.Charts.Regions.Series).X("93%").Y("96%").Add();
            })
              .PrimaryXAxis(xaxis =>
                 xaxis.MajorGridLines(mg=>mg.Width(0))
                      .Minimum(new DateTime(1973, 1, 1)).
                       Maximum(new DateTime(2018, 1, 1))
                     .MinorTickLines(mt=>mt.Width(1))
                      .ValueType(Syncfusion.EJ2.Charts.ValueType.DateTime)
                      .LabelFormat("yyyy")
                     .IntervalType(Syncfusion.EJ2.Charts.IntervalType.Years)
                     .EdgeLabelPlacement(Syncfusion.EJ2.Charts.EdgeLabelPlacement.Shift)
              )
              .PrimaryYAxis(yaxis =>
                  yaxis
                        .MajorTickLines(mt=>mt.Width(0))
                        .LineStyle(ls=>ls.Width(0))
                        .Title("In Billions (USD)")
                        .Minimum(0).
                         Maximum(25)
                        .Interval(5)
              )
          .Title("US Music Sales By Format")
          .Load("load").ChartArea(area => area.Border(br => br.Width(0))).Render()
          )

    </div>

@*custom code start*@
    <style>
        #control-container {
            padding: 0px !important;
        }
    </style>
@*custom code end*@
    <script>
        var load = function (args) {
            var selectedTheme = themeName ? themeName : 'Fluent2';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast').replace(/5.3/i, '5');
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "75%";
            args.chart.annotations[0].content = ej.base.Browser.isDevice ? '<div style="font-weight: bold; color: white; font-size: 9px;">8-TRACK</div>' : '<div style="font-weight: bold; color: white; font-size: 11px;">8-TRACK</div>';
            args.chart.annotations[1].content = ej.base.Browser.isDevice ? '<div style="font-weight: bold; color: white; font-size: 9px;">VINYL</div>' : '<div style="font-weight: bold; color: white;font-size: 11px;">VINYL</div>';
            args.chart.annotations[2].content = ej.base.Browser.isDevice ? '<div style="font-weight: bold; color: white; font-size: 9px;">CASSETTE</div>' : '<div style="font-weight: bold; color: white;font-size: 11px;">CASSETTE</div>';
            args.chart.annotations[3].content = ej.base.Browser.isDevice ? '<div style="font-weight: bold; color: white; font-size: 9px;">COMPACT DISC</div>' : '<div style="font-weight: bold; color: white;font-size: 11px;">COMPACT DISC</div>';
            args.chart.annotations[4].content = ej.base.Browser.isDevice ? '<div style="font-weight: bold; color: white; font-size: 9px;">OTHERS</div>' : '<div style="font-weight: bold; color: white;font-size: 11px;">OTHERS</div>';;
            args.chart.annotations[5].content = ej.base.Browser.isDevice ? '<div style="font-weight: bold; color: white; font-size: 9px;">DOWNLOAD</div>' : '<div style="font-weight: bold; color: white; font-size: 11px;">DOWNLOAD</div>';
            args.chart.annotations[6].content = ej.base.Browser.isDevice ? '<div style="font-weight: bold; color: white; font-size: 9px;">STREAMING</div>' : '<div style="font-weight: bold; color: white;font-size: 11px;">STREAMING</div>';
        }
    </script>
}
@*custom code start*@
@section Meta{
    <meta name="description" content="This example demonstrates the Area in ASP.NET MVC Chart control. Explore here for more details." />
}
@*custom code end*@
@section ActionDescription{
    <p>
        This <a target="_blank" href="https://www.syncfusion.com/aspnet-mvc-ui-controls/charts/chart-types/area-chart" aria-label="ASP.NET MVC Area Chart">ASP.NET MVC Area Chart<span class="sr-only">opens in a new tab</span></a> example visualizes music sales data by format in US by using a default area series in the chart.
    </p>
}
@section Description{
    <p>
        In this example, you can see how the area type chart can be rendered and configured. It is like the line chart, which represents time-dependent data and shows trends at equal intervals, but the area is closed and filled with the color of the series.
    </p>
    <p>
        More information on the area series can be found in this
        <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/chart/chart-types#area-charts" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
    </p>
}
@section Title{
    <title>ASP.NET MVC Chart Area Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Charts</h1>
}