@using Syncfusion.EJ2;
@section ControlsSection{
    <div class="control-section" align="center">
        
      @Html.EJS().Chart("container").Series(series =>
 {
     series.SegmentAxis(Syncfusion.EJ2.Charts.Segment.Y).
     Type(Syncfusion.EJ2.Charts.ChartSeriesType.MultiColoredLine).XName("XValue")
     .Segments(seg =>
     {
         seg.Color("red").Value(450).Add();
         seg.Color("green").Value(500).Add();
         seg.Color("blue").Add();
     
     })
      .YName("YValue")
      .DataSource("annualMean").Width(2).Add();
     }).PrimaryXAxis(px => px.ValueType(Syncfusion.EJ2.Charts.ValueType.DateTime).Minimum(new DateTime(1910, 1, 1)).Maximum(new DateTime(2010, 1, 1))
     .MajorGridLines(mg=>mg.Width(0)).IntervalType(Syncfusion.EJ2.Charts.IntervalType.Years)
     .EdgeLabelPlacement(Syncfusion.EJ2.Charts.EdgeLabelPlacement.Shift).LabelFormat("yyyy")
      ).PrimaryYAxis(py => py.Maximum(800).Minimum(200)
     .LineStyle(ls=>ls.Width(0)).MajorTickLines(mt=>mt.Width(0))    
     .Interval(100)
     .LabelFormat("{value}mm").RangePadding(Syncfusion.EJ2.Charts.ChartRangePadding.None)
     ).Title("Annual Mean Rainfall in Australia"
     ).ChartArea(area => area.Border(br => br.Width(0))
     ).Tooltip(tt => tt.Enable(true).Shared(true).Header("<b>Rainfall</b>").Format("${point.x} : <b>${point.y}</b>").EnableMarker(true)
     ).Annotations(an => { 
                             an.Region(Syncfusion.EJ2.Charts.Regions.Series)
                                 .Content("<div style='color:green;font-weight:bold;font-size:14px'>Medium</div>").Add();
                             an.Region(Syncfusion.EJ2.Charts.Regions.Series).Y("10%")
                                 .Content("<div style='color:blue;font-weight:bold;font-size:14px'>High</div>").Add();
                             an.Region(Syncfusion.EJ2.Charts.Regions.Series).X("95%").Y("84%")
                                 .Content("<div style='color:red;font-weight:bold;font-size:14px'>Low</div>").Add();
     }).Load("load").Render()
        </div>
    
     @*custom code start*@
    <style>
        #control-container {
            padding: 0px !important;
        }
    </style>
    @*custom code end*@
    <script>
        var annualMean = [];
        [
            380, 410, 310, 540, 510, 330, 490, 470, 472, 460, 550, 420, 380, 430, 385, 520, 580, 420, 350, 505,
            535, 410, 204, 400, 415, 408, 415, 350, 375, 500, 390, 450, 440, 350, 400, 365, 490, 400, 520, 510,
            395, 380, 404, 400, 500, 390, 610, 380, 390, 420, 440, 570, 600, 380, 410, 405, 480, 320, 420, 440,
            320, 280, 320, 400, 390, 460, 470, 490, 420, 480, 410, 420, 580, 410, 380, 480, 360, 650, 680, 720,
            580, 480, 520, 440, 420, 430, 380, 520, 410, 540, 400, 390, 460, 470, 490, 420, 480, 470, 490, 330,
            520, 480, 580, 590, 600, 310, 480, 500, 400, 508, 480, 460, 700, 705, 480, 410, 480
        ].map(function (value, index) {
            annualMean.push({ XValue: new Date(1900 + index, 1, 1), YValue: value });
        });

        var load = function (args) {
            var selectedTheme = themeName ? themeName : 'Fluent2';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast').replace(/5.3/i, '5');
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "75%";
            args.chart.annotations[0].x = ej.base.Browser.isDevice ? "21%" : "19%";
            args.chart.annotations[0].y = ej.base.Browser.isDevice ? "42%" : "47%";
            args.chart.annotations[1].x = ej.base.Browser.isDevice ? "68%" : "69%";
        }
    </script>
}
 @*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Line Zone in ASP.NET MVC Chart control. Explore here for more details."/>
                }
 @*custom code end*@
@section ActionDescription{
    <p>
        This sample visualizes the annual mean rainfall in Australia with multi-colored line series in the chart. Data points are enhanced with segments and tooltips.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure the points in a particular range by using <code>MultiColoredLine</code> series. Points under the range can be customized with <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Charts.ChartSegment.html#Syncfusion_EJ2_Charts_ChartSegment_Color" aria-label="Color">Color<span class="sr-only">opens in a new tab</span></a> and
        <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Charts.ChartSegment.html#Syncfusion_EJ2_Charts_ChartSegment_DashArray" aria-label="DashArray">DashArray<span class="sr-only">opens in a new tab</span></a> properties in <code>ChartSegment</code>.
    </p>
    <p>
        <code>Tooltip</code> is enabled in this example. To see the tooltip in action, hover a point or tap on a point in touch enabled devices.
    </p>
    <p>
        More information on the line series can be found in this
        <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/chart/chart-types#line-charts" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
    </p>
}
@section Title{
                    <title>ASP.NET MVC Chart Line Zone Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Charts</h1>
                }